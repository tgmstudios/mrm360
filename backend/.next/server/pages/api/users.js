"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/users";
exports.ids = ["pages/api/users"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fusers&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fusers%2Findex.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fusers&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fusers%2Findex.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_users_index_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/users/index.ts */ \"(api)/./src/pages/api/users/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_users_index_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_users_index_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_users_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_users_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/users\",\n        pathname: \"/api/users\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_users_index_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVzZXJzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTJGcGFnZXMlMkZhcGklMkZ1c2VycyUyRmluZGV4LnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzJEO0FBQzNEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywwREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsMERBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvP2RlYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyYy9wYWdlcy9hcGkvdXNlcnMvaW5kZXgudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS91c2Vyc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3VzZXJzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fusers&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fusers%2Findex.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/managers/userManager.ts":
/*!*************************************!*\
  !*** ./src/managers/userManager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserManager: () => (/* binding */ UserManager)\n/* harmony export */ });\n/* harmony import */ var _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/models/prismaClient */ \"(api)/./src/models/prismaClient.ts\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/logger */ \"(api)/./src/utils/logger.ts\");\n/* harmony import */ var _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/middleware/errorHandler */ \"(api)/./src/middleware/errorHandler.ts\");\n\n\n\nclass UserManager {\n    async createUser(data) {\n        try {\n            // Check if user already exists\n            const existingUser = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    email: data.email\n                }\n            });\n            if (existingUser) {\n                throw _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_2__.Errors.CONFLICT(\"User with this email already exists\");\n            }\n            const user = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.create({\n                data: {\n                    email: data.email,\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    displayName: data.displayName,\n                    paidStatus: data.paidStatus ?? false,\n                    role: data.role ?? \"MEMBER\"\n                }\n            });\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`Created user: ${user.email}`);\n            return user;\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Error creating user:\", error);\n            throw error;\n        }\n    }\n    async getUserById(id) {\n        try {\n            const user = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    id\n                },\n                include: {\n                    userGroups: {\n                        include: {\n                            group: true\n                        }\n                    }\n                }\n            });\n            if (!user) {\n                throw _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_2__.Errors.NOT_FOUND(\"User\");\n            }\n            return user;\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Error getting user ${id}:`, error);\n            throw error;\n        }\n    }\n    async getUserByEmail(email) {\n        try {\n            const user = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    email\n                },\n                include: {\n                    userGroups: {\n                        include: {\n                            group: true\n                        }\n                    }\n                }\n            });\n            return user;\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Error getting user by email ${email}:`, error);\n            throw error;\n        }\n    }\n    async updateUser(id, data) {\n        try {\n            // Build update data object with only provided fields\n            const updateData = {};\n            if (data.firstName !== undefined) updateData.firstName = data.firstName;\n            if (data.lastName !== undefined) updateData.lastName = data.lastName;\n            if (data.displayName !== undefined) updateData.displayName = data.displayName;\n            // Map isPaid to paidStatus (existing database field)\n            if (data.isPaid !== undefined) updateData.paidStatus = data.isPaid;\n            // Note: isActive and paidUntil fields don't exist in the database schema\n            // These would need to be added to the schema if they're required\n            const user = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.update({\n                where: {\n                    id\n                },\n                data: updateData\n            });\n            // Handle authentik groups if provided\n            if (data.authentikGroups !== undefined) {\n                // Remove existing user groups\n                await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.userGroup.deleteMany({\n                    where: {\n                        userId: id\n                    }\n                });\n                // Add new user groups\n                if (data.authentikGroups.length > 0) {\n                    const userGroups = data.authentikGroups.map((groupId)=>({\n                            userId: id,\n                            groupId\n                        }));\n                    await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.userGroup.createMany({\n                        data: userGroups\n                    });\n                }\n            }\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`Updated user: ${user.email}`);\n            return user;\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Error updating user ${id}:`, error);\n            throw error;\n        }\n    }\n    async deleteUser(id) {\n        try {\n            await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.delete({\n                where: {\n                    id\n                }\n            });\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`Deleted user: ${id}`);\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Error deleting user ${id}:`, error);\n            throw error;\n        }\n    }\n    async getUsers(params) {\n        try {\n            const { page = 1, limit = 20, search, role, paidStatus, groupId, teamId, sortBy, sortOrder } = params;\n            const skip = (page - 1) * limit;\n            // Build where clause\n            const where = {};\n            if (search) {\n                where.OR = [\n                    {\n                        firstName: {\n                            contains: search,\n                            mode: \"insensitive\"\n                        }\n                    },\n                    {\n                        lastName: {\n                            contains: search,\n                            mode: \"insensitive\"\n                        }\n                    },\n                    {\n                        email: {\n                            contains: search,\n                            mode: \"insensitive\"\n                        }\n                    }\n                ];\n            }\n            if (role) {\n                where.role = role;\n            }\n            if (paidStatus !== undefined) {\n                where.paidStatus = paidStatus;\n            }\n            if (groupId) {\n                where.userGroups = {\n                    some: {\n                        groupId\n                    }\n                };\n            }\n            if (teamId) {\n                where.userTeams = {\n                    some: {\n                        teamId\n                    }\n                };\n            }\n            // Get total count\n            const total = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.count({\n                where\n            });\n            // Build orderBy clause\n            let orderBy = [];\n            if (sortBy && sortOrder) {\n                if (sortBy === \"displayName\") {\n                    orderBy = [\n                        {\n                            lastName: sortOrder\n                        },\n                        {\n                            firstName: sortOrder\n                        }\n                    ];\n                } else if (sortBy === \"email\") {\n                    orderBy = [\n                        {\n                            email: sortOrder\n                        }\n                    ];\n                } else if (sortBy === \"createdAt\") {\n                    orderBy = [\n                        {\n                            createdAt: sortOrder\n                        }\n                    ];\n                } else {\n                    // Default ordering\n                    orderBy = [\n                        {\n                            lastName: \"asc\"\n                        },\n                        {\n                            firstName: \"asc\"\n                        }\n                    ];\n                }\n            } else {\n                // Default ordering\n                orderBy = [\n                    {\n                        lastName: \"asc\"\n                    },\n                    {\n                        firstName: \"asc\"\n                    }\n                ];\n            }\n            // Get users\n            const users = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findMany({\n                where,\n                skip,\n                take: limit,\n                orderBy,\n                include: {\n                    userGroups: {\n                        include: {\n                            group: true\n                        }\n                    },\n                    userTeams: {\n                        include: {\n                            team: true\n                        }\n                    }\n                }\n            });\n            const totalPages = Math.ceil(total / limit);\n            return {\n                success: true,\n                data: users,\n                pagination: {\n                    page,\n                    limit,\n                    total,\n                    totalPages\n                }\n            };\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Error getting users:\", error);\n            throw error;\n        }\n    }\n    async assignUserToGroup(userId, groupId) {\n        try {\n            // Check if user and group exist\n            const [user, group] = await Promise.all([\n                _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                    where: {\n                        id: userId\n                    }\n                }),\n                _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.group.findUnique({\n                    where: {\n                        id: groupId\n                    }\n                })\n            ]);\n            if (!user) {\n                throw _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_2__.Errors.NOT_FOUND(\"User\");\n            }\n            if (!group) {\n                throw _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_2__.Errors.NOT_FOUND(\"Group\");\n            }\n            // Check if already assigned\n            const existingAssignment = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.userGroup.findUnique({\n                where: {\n                    userId_groupId: {\n                        userId,\n                        groupId\n                    }\n                }\n            });\n            if (existingAssignment) {\n                throw _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_2__.Errors.CONFLICT(\"User is already assigned to this group\");\n            }\n            // Assign user to group\n            await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.userGroup.create({\n                data: {\n                    userId,\n                    groupId\n                }\n            });\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`Assigned user ${userId} to group ${groupId}`);\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Error assigning user ${userId} to group ${groupId}:`, error);\n            throw error;\n        }\n    }\n    async removeUserFromGroup(userId, groupId) {\n        try {\n            await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.userGroup.delete({\n                where: {\n                    userId_groupId: {\n                        userId,\n                        groupId\n                    }\n                }\n            });\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`Removed user ${userId} from group ${groupId}`);\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Error removing user ${userId} from group ${groupId}:`, error);\n            throw error;\n        }\n    }\n    async generateQRCode(userId) {\n        try {\n            const user = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n                where: {\n                    id: userId\n                }\n            });\n            if (!user) {\n                throw _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_2__.Errors.NOT_FOUND(\"User\");\n            }\n            // Generate unique QR code\n            const qrCode = `MRM360-${userId}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            // Update user with QR code\n            await _models_prismaClient__WEBPACK_IMPORTED_MODULE_0__.prisma.user.update({\n                where: {\n                    id: userId\n                },\n                data: {\n                    qrCode\n                }\n            });\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`Generated QR code for user ${userId}`);\n            return qrCode;\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Error generating QR code for user ${userId}:`, error);\n            throw error;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/managers/userManager.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/authMiddleware.ts":
/*!******************************************!*\
  !*** ./src/middleware/authMiddleware.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withAuth: () => (/* binding */ withAuth)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/prismaClient */ \"(api)/./src/models/prismaClient.ts\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/logger */ \"(api)/./src/utils/logger.ts\");\n\n\n\n// Helper function to determine effective role based on OIDC groups\nfunction getEffectiveRole(userRole, authentikGroups) {\n    // If user has tech-team group, elevate to admin regardless of base role\n    if (authentikGroups.includes(\"tech-team\")) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"User has tech-team group, elevating to admin role\", {\n            originalRole: userRole,\n            authentikGroups\n        });\n        return \"ADMIN\";\n    }\n    return userRole;\n}\nfunction withAuth(handler) {\n    return async (req, res)=>{\n        try {\n            // Get JWT token from Authorization header\n            const authHeader = req.headers.authorization;\n            if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\"No valid authorization header\", {\n                    path: req.url\n                });\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"No valid token provided\"\n                });\n            }\n            const token = authHeader.substring(7); // Remove 'Bearer ' prefix\n            // Verify JWT token\n            let decoded;\n            try {\n                decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, process.env.JWT_SECRET || \"fallback-secret\");\n            } catch (error) {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\"Invalid JWT token\", {\n                    error,\n                    path: req.url\n                });\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"Invalid token\"\n                });\n            }\n            if (!decoded || !decoded.id) {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\"Invalid token payload\", {\n                    path: req.url\n                });\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"Invalid token payload\"\n                });\n            }\n            // Get fresh user data from database\n            const user = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma.user.findUnique({\n                where: {\n                    id: decoded.id\n                },\n                select: {\n                    id: true,\n                    email: true,\n                    username: true,\n                    firstName: true,\n                    lastName: true,\n                    role: true\n                }\n            });\n            if (!user) {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\"User not found\", {\n                    userId: decoded.id,\n                    path: req.url\n                });\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"User not found\"\n                });\n            }\n            // Get user groups\n            const userGroups = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma.userGroup.findMany({\n                where: {\n                    userId: user.id\n                },\n                include: {\n                    group: {\n                        select: {\n                            name: true\n                        }\n                    }\n                }\n            });\n            // Create authenticated request with user info\n            const authenticatedReq = req;\n            authenticatedReq.user = {\n                id: user.id,\n                email: user.email,\n                username: user.username || undefined,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                role: getEffectiveRole(user.role, userGroups.map((ug)=>ug.group.name)),\n                groups: userGroups.map((ug)=>ug.group.name)\n            };\n            _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"Authentication successful\", {\n                userId: user.id,\n                userRole: authenticatedReq.user.role,\n                path: req.url\n            });\n            // Call the original handler\n            await handler(authenticatedReq, res);\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.error(\"Authentication middleware error\", {\n                error,\n                path: req.url\n            });\n            return res.status(500).json({\n                error: \"Internal server error\",\n                message: \"Authentication failed\"\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/middleware/authMiddleware.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/corsMiddleware.ts":
/*!******************************************!*\
  !*** ./src/middleware/corsMiddleware.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withCORS: () => (/* binding */ withCORS)\n/* harmony export */ });\nfunction withCORS(handler) {\n    return async (req, res)=>{\n        // Set CORS headers\n        const allowedOrigin = process.env.FRONTEND_URL || \"http://localhost:3011\";\n        res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n        res.setHeader(\"Access-Control-Allow-Origin\", allowedOrigin);\n        res.setHeader(\"Access-Control-Allow-Methods\", \"GET,OPTIONS,PATCH,DELETE,POST,PUT\");\n        res.setHeader(\"Access-Control-Allow-Headers\", \"X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version, Authorization\");\n        // Handle preflight request\n        if (req.method === \"OPTIONS\") {\n            res.status(200).end();\n            return;\n        }\n        // Call the original handler\n        await handler(req, res);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWlkZGxld2FyZS9jb3JzTWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRU8sU0FBU0EsU0FBU0MsT0FBcUU7SUFDNUYsT0FBTyxPQUFPQyxLQUFxQkM7UUFDakMsbUJBQW1CO1FBQ25CLE1BQU1DLGdCQUFnQkMsUUFBUUMsR0FBRyxDQUFDQyxZQUFZLElBQUk7UUFFbERKLElBQUlLLFNBQVMsQ0FBQyxvQ0FBb0M7UUFDbERMLElBQUlLLFNBQVMsQ0FBQywrQkFBK0JKO1FBQzdDRCxJQUFJSyxTQUFTLENBQUMsZ0NBQWdDO1FBQzlDTCxJQUFJSyxTQUFTLENBQUMsZ0NBQWdDO1FBRTlDLDJCQUEyQjtRQUMzQixJQUFJTixJQUFJTyxNQUFNLEtBQUssV0FBVztZQUM1Qk4sSUFBSU8sTUFBTSxDQUFDLEtBQUtDLEdBQUc7WUFDbkI7UUFDRjtRQUVBLDRCQUE0QjtRQUM1QixNQUFNVixRQUFRQyxLQUFLQztJQUNyQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvLi9zcmMvbWlkZGxld2FyZS9jb3JzTWlkZGxld2FyZS50cz8zYjljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhDT1JTKGhhbmRsZXI6IChyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkgPT4gUHJvbWlzZTx2b2lkPikge1xuICByZXR1cm4gYXN5bmMgKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiB7XG4gICAgLy8gU2V0IENPUlMgaGVhZGVyc1xuICAgIGNvbnN0IGFsbG93ZWRPcmlnaW4gPSBwcm9jZXNzLmVudi5GUk9OVEVORF9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAxMSc7XG4gICAgXG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHMnLCAndHJ1ZScpO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsIGFsbG93ZWRPcmlnaW4pO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULE9QVElPTlMsUEFUQ0gsREVMRVRFLFBPU1QsUFVUJyk7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdYLUNTUkYtVG9rZW4sIFgtUmVxdWVzdGVkLVdpdGgsIEFjY2VwdCwgQWNjZXB0LVZlcnNpb24sIENvbnRlbnQtTGVuZ3RoLCBDb250ZW50LU1ENSwgQ29udGVudC1UeXBlLCBEYXRlLCBYLUFwaS1WZXJzaW9uLCBBdXRob3JpemF0aW9uJyk7XG5cbiAgICAvLyBIYW5kbGUgcHJlZmxpZ2h0IHJlcXVlc3RcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuZW5kKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQ2FsbCB0aGUgb3JpZ2luYWwgaGFuZGxlclxuICAgIGF3YWl0IGhhbmRsZXIocmVxLCByZXMpO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbIndpdGhDT1JTIiwiaGFuZGxlciIsInJlcSIsInJlcyIsImFsbG93ZWRPcmlnaW4iLCJwcm9jZXNzIiwiZW52IiwiRlJPTlRFTkRfVVJMIiwic2V0SGVhZGVyIiwibWV0aG9kIiwic3RhdHVzIiwiZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/middleware/corsMiddleware.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/errorHandler.ts":
/*!****************************************!*\
  !*** ./src/middleware/errorHandler.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Errors: () => (/* binding */ Errors),\n/* harmony export */   createError: () => (/* binding */ createError),\n/* harmony export */   handleApiError: () => (/* binding */ handleApiError),\n/* harmony export */   withErrorHandler: () => (/* binding */ withErrorHandler)\n/* harmony export */ });\nfunction createError(message, statusCode = 500, code) {\n    const error = new Error(message);\n    error.statusCode = statusCode;\n    error.code = code;\n    return error;\n}\nfunction handleApiError(error, req, res) {\n    console.error(\"API Error:\", {\n        error,\n        url: req.url,\n        method: req.method,\n        timestamp: new Date().toISOString()\n    });\n    if (error instanceof Error) {\n        const apiError = error;\n        if (apiError.statusCode) {\n            return res.status(apiError.statusCode).json({\n                success: false,\n                error: apiError.message,\n                code: apiError.code\n            });\n        }\n    }\n    // Default error response\n    return res.status(500).json({\n        success: false,\n        error: \"Internal server error\"\n    });\n}\nfunction withErrorHandler(handler) {\n    return async (req, res)=>{\n        try {\n            await handler(req, res);\n        } catch (error) {\n            handleApiError(error, req, res);\n        }\n    };\n}\n// Common error types\nconst Errors = {\n    NOT_FOUND: (resource)=>createError(`${resource} not found`, 404, \"NOT_FOUND\"),\n    UNAUTHORIZED: ()=>createError(\"Unauthorized\", 401, \"UNAUTHORIZED\"),\n    FORBIDDEN: ()=>createError(\"Forbidden\", 403, \"FORBIDDEN\"),\n    BAD_REQUEST: (message)=>createError(message, 400, \"BAD_REQUEST\"),\n    VALIDATION_ERROR: (message)=>createError(message, 400, \"VALIDATION_ERROR\"),\n    CONFLICT: (message)=>createError(message, 409, \"CONFLICT\"),\n    INTERNAL_ERROR: ()=>createError(\"Internal server error\", 500, \"INTERNAL_ERROR\")\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWlkZGxld2FyZS9lcnJvckhhbmRsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU9PLFNBQVNBLFlBQVlDLE9BQWUsRUFBRUMsYUFBcUIsR0FBRyxFQUFFQyxJQUFhO0lBQ2xGLE1BQU1DLFFBQVEsSUFBSUMsTUFBTUo7SUFDeEJHLE1BQU1GLFVBQVUsR0FBR0E7SUFDbkJFLE1BQU1ELElBQUksR0FBR0E7SUFDYixPQUFPQztBQUNUO0FBRU8sU0FBU0UsZUFDZEYsS0FBYyxFQUNkRyxHQUFtQixFQUNuQkMsR0FBb0I7SUFFcEJDLFFBQVFMLEtBQUssQ0FBQyxjQUFjO1FBQzFCQTtRQUNBTSxLQUFLSCxJQUFJRyxHQUFHO1FBQ1pDLFFBQVFKLElBQUlJLE1BQU07UUFDbEJDLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztJQUNuQztJQUVBLElBQUlWLGlCQUFpQkMsT0FBTztRQUMxQixNQUFNVSxXQUFXWDtRQUVqQixJQUFJVyxTQUFTYixVQUFVLEVBQUU7WUFDdkIsT0FBT00sSUFBSVEsTUFBTSxDQUFDRCxTQUFTYixVQUFVLEVBQUVlLElBQUksQ0FBQztnQkFDMUNDLFNBQVM7Z0JBQ1RkLE9BQU9XLFNBQVNkLE9BQU87Z0JBQ3ZCRSxNQUFNWSxTQUFTWixJQUFJO1lBQ3JCO1FBQ0Y7SUFDRjtJQUVBLHlCQUF5QjtJQUN6QixPQUFPSyxJQUFJUSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1FBQzFCQyxTQUFTO1FBQ1RkLE9BQU87SUFDVDtBQUNGO0FBRU8sU0FBU2UsaUJBQ2RDLE9BQXFFO0lBRXJFLE9BQU8sT0FBT2IsS0FBcUJDO1FBQ2pDLElBQUk7WUFDRixNQUFNWSxRQUFRYixLQUFLQztRQUNyQixFQUFFLE9BQU9KLE9BQU87WUFDZEUsZUFBZUYsT0FBT0csS0FBS0M7UUFDN0I7SUFDRjtBQUNGO0FBRUEscUJBQXFCO0FBQ2QsTUFBTWEsU0FBUztJQUNwQkMsV0FBVyxDQUFDQyxXQUFxQnZCLFlBQVksQ0FBQyxFQUFFdUIsU0FBUyxVQUFVLENBQUMsRUFBRSxLQUFLO0lBQzNFQyxjQUFjLElBQU14QixZQUFZLGdCQUFnQixLQUFLO0lBQ3JEeUIsV0FBVyxJQUFNekIsWUFBWSxhQUFhLEtBQUs7SUFDL0MwQixhQUFhLENBQUN6QixVQUFvQkQsWUFBWUMsU0FBUyxLQUFLO0lBQzVEMEIsa0JBQWtCLENBQUMxQixVQUFvQkQsWUFBWUMsU0FBUyxLQUFLO0lBQ2pFMkIsVUFBVSxDQUFDM0IsVUFBb0JELFlBQVlDLFNBQVMsS0FBSztJQUN6RDRCLGdCQUFnQixJQUFNN0IsWUFBWSx5QkFBeUIsS0FBSztBQUNsRSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvLi9zcmMvbWlkZGxld2FyZS9lcnJvckhhbmRsZXIudHM/N2E4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEFwaUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gIHN0YXR1c0NvZGU/OiBudW1iZXI7XHJcbiAgY29kZT86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2U6IHN0cmluZywgc3RhdHVzQ29kZTogbnVtYmVyID0gNTAwLCBjb2RlPzogc3RyaW5nKTogQXBpRXJyb3Ige1xyXG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpIGFzIEFwaUVycm9yO1xyXG4gIGVycm9yLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xyXG4gIGVycm9yLmNvZGUgPSBjb2RlO1xyXG4gIHJldHVybiBlcnJvcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUFwaUVycm9yKFxyXG4gIGVycm9yOiB1bmtub3duLFxyXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXHJcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2VcclxuKSB7XHJcbiAgY29uc29sZS5lcnJvcignQVBJIEVycm9yOicsIHtcclxuICAgIGVycm9yLFxyXG4gICAgdXJsOiByZXEudXJsLFxyXG4gICAgbWV0aG9kOiByZXEubWV0aG9kLFxyXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICB9KTtcclxuXHJcbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcclxuICAgIGNvbnN0IGFwaUVycm9yID0gZXJyb3IgYXMgQXBpRXJyb3I7XHJcbiAgICBcclxuICAgIGlmIChhcGlFcnJvci5zdGF0dXNDb2RlKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKGFwaUVycm9yLnN0YXR1c0NvZGUpLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiBhcGlFcnJvci5tZXNzYWdlLFxyXG4gICAgICAgIGNvZGU6IGFwaUVycm9yLmNvZGVcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBEZWZhdWx0IGVycm9yIHJlc3BvbnNlXHJcbiAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB3aXRoRXJyb3JIYW5kbGVyKFxyXG4gIGhhbmRsZXI6IChyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkgPT4gUHJvbWlzZTx2b2lkPlxyXG4pIHtcclxuICByZXR1cm4gYXN5bmMgKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBoYW5kbGVyKHJlcSwgcmVzKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGhhbmRsZUFwaUVycm9yKGVycm9yLCByZXEsIHJlcyk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG5cclxuLy8gQ29tbW9uIGVycm9yIHR5cGVzXHJcbmV4cG9ydCBjb25zdCBFcnJvcnMgPSB7XHJcbiAgTk9UX0ZPVU5EOiAocmVzb3VyY2U6IHN0cmluZykgPT4gY3JlYXRlRXJyb3IoYCR7cmVzb3VyY2V9IG5vdCBmb3VuZGAsIDQwNCwgJ05PVF9GT1VORCcpLFxyXG4gIFVOQVVUSE9SSVpFRDogKCkgPT4gY3JlYXRlRXJyb3IoJ1VuYXV0aG9yaXplZCcsIDQwMSwgJ1VOQVVUSE9SSVpFRCcpLFxyXG4gIEZPUkJJRERFTjogKCkgPT4gY3JlYXRlRXJyb3IoJ0ZvcmJpZGRlbicsIDQwMywgJ0ZPUkJJRERFTicpLFxyXG4gIEJBRF9SRVFVRVNUOiAobWVzc2FnZTogc3RyaW5nKSA9PiBjcmVhdGVFcnJvcihtZXNzYWdlLCA0MDAsICdCQURfUkVRVUVTVCcpLFxyXG4gIFZBTElEQVRJT05fRVJST1I6IChtZXNzYWdlOiBzdHJpbmcpID0+IGNyZWF0ZUVycm9yKG1lc3NhZ2UsIDQwMCwgJ1ZBTElEQVRJT05fRVJST1InKSxcclxuICBDT05GTElDVDogKG1lc3NhZ2U6IHN0cmluZykgPT4gY3JlYXRlRXJyb3IobWVzc2FnZSwgNDA5LCAnQ09ORkxJQ1QnKSxcclxuICBJTlRFUk5BTF9FUlJPUjogKCkgPT4gY3JlYXRlRXJyb3IoJ0ludGVybmFsIHNlcnZlciBlcnJvcicsIDUwMCwgJ0lOVEVSTkFMX0VSUk9SJylcclxufTtcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUVycm9yIiwibWVzc2FnZSIsInN0YXR1c0NvZGUiLCJjb2RlIiwiZXJyb3IiLCJFcnJvciIsImhhbmRsZUFwaUVycm9yIiwicmVxIiwicmVzIiwiY29uc29sZSIsInVybCIsIm1ldGhvZCIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImFwaUVycm9yIiwic3RhdHVzIiwianNvbiIsInN1Y2Nlc3MiLCJ3aXRoRXJyb3JIYW5kbGVyIiwiaGFuZGxlciIsIkVycm9ycyIsIk5PVF9GT1VORCIsInJlc291cmNlIiwiVU5BVVRIT1JJWkVEIiwiRk9SQklEREVOIiwiQkFEX1JFUVVFU1QiLCJWQUxJREFUSU9OX0VSUk9SIiwiQ09ORkxJQ1QiLCJJTlRFUk5BTF9FUlJPUiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/middleware/errorHandler.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/permissionMiddleware.ts":
/*!************************************************!*\
  !*** ./src/middleware/permissionMiddleware.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withPermissions: () => (/* binding */ withPermissions)\n/* harmony export */ });\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/logger */ \"(api)/./src/utils/logger.ts\");\n\nfunction withPermissions(handler, requiredPermissions) {\n    return async (req, res)=>{\n        try {\n            // Cast to PermissionRequest since this middleware should be used after withAuth\n            const permissionReq = req;\n            if (!permissionReq.user) {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\"Permission check attempted without authentication\", {\n                    path: req.url,\n                    method: req.method\n                });\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"Authentication required\"\n                });\n            }\n            // Get required permissions (either static array or dynamic function)\n            const permissions = typeof requiredPermissions === \"function\" ? requiredPermissions(req) : requiredPermissions;\n            // Check if user has required permissions\n            const hasPermission = await checkPermissions(permissionReq.user, permissions);\n            if (!hasPermission) {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\"Insufficient permissions\", {\n                    userId: permissionReq.user.id,\n                    userRole: permissionReq.user.role,\n                    requiredPermissions: permissions,\n                    path: req.url\n                });\n                return res.status(403).json({\n                    error: \"Forbidden\",\n                    message: \"Insufficient permissions for this operation\"\n                });\n            }\n            _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(\"Permission check passed\", {\n                userId: permissionReq.user.id,\n                requiredPermissions: permissions,\n                path: req.url\n            });\n            // Call the original handler\n            await handler(permissionReq, res);\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.error(\"Permission middleware error\", {\n                error,\n                path: req.url\n            });\n            return res.status(500).json({\n                error: \"Internal server error\",\n                message: \"Permission check failed\"\n            });\n        }\n    };\n}\nasync function checkPermissions(user, requiredPermissions) {\n    // For now, implement a simple role-based permission system\n    // This can be enhanced later with a more sophisticated permission system\n    const rolePermissions = {\n        \"ADMIN\": [\n            \"users:read\",\n            \"users:create\",\n            \"users:update\",\n            \"users:delete\",\n            \"groups:read\",\n            \"groups:create\",\n            \"groups:update\",\n            \"groups:delete\",\n            \"events:read\",\n            \"events:create\",\n            \"events:update\",\n            \"events:delete\",\n            \"teams:read\",\n            \"teams:write\",\n            \"teams:create\",\n            \"teams:update\",\n            \"teams:delete\",\n            \"tasks:read\",\n            \"tasks:create\",\n            \"tasks:update\",\n            \"tasks:delete\",\n            \"tasks:enqueue\"\n        ],\n        \"EXEC_BOARD\": [\n            \"users:read\",\n            \"users:create\",\n            \"users:update\",\n            \"groups:read\",\n            \"groups:create\",\n            \"groups:update\",\n            \"events:read\",\n            \"events:create\",\n            \"events:update\",\n            \"teams:read\",\n            \"teams:write\",\n            \"teams:create\",\n            \"teams:update\",\n            \"tasks:read\",\n            \"tasks:create\",\n            \"tasks:update\"\n        ],\n        \"MEMBER\": [\n            \"users:read\",\n            \"groups:read\",\n            \"events:read\",\n            \"teams:read\",\n            \"tasks:read\"\n        ]\n    };\n    // Check if user has tech-team group in authentikGroups (OIDC groups)\n    // If they do, give them admin permissions regardless of their role\n    let effectiveRole = user.role;\n    if (user.authentikGroups && Array.isArray(user.authentikGroups)) {\n        if (user.authentikGroups.includes(\"tech-team\")) {\n            effectiveRole = \"ADMIN\";\n            _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(\"User has tech-team group, elevating to admin permissions\", {\n                userId: user.id,\n                originalRole: user.role,\n                authentikGroups: user.authentikGroups\n            });\n        }\n    }\n    const userPermissions = rolePermissions[effectiveRole] || [];\n    // Check if user has all required permissions\n    return requiredPermissions.every((permission)=>userPermissions.includes(permission));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/middleware/permissionMiddleware.ts\n");

/***/ }),

/***/ "(api)/./src/models/prismaClient.ts":
/*!************************************!*\
  !*** ./src/models/prismaClient.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = globalThis.__prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0\n});\nif (true) {\n    globalThis.__prisma = prisma;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbW9kZWxzL3ByaXNtYUNsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBTXZDLE1BQU1DLFNBQVNDLFdBQVdDLFFBQVEsSUFBSSxJQUFJSCx3REFBWUEsQ0FBQztJQUM1REksS0FBS0MsS0FBeUIsR0FBZ0I7UUFBQztRQUFTO1FBQVM7S0FBTyxHQUFHLENBQVM7QUFDdEYsR0FBRztBQUVILElBQUlBLElBQXlCLEVBQWM7SUFDekNILFdBQVdDLFFBQVEsR0FBR0Y7QUFDeEI7QUFFQSxpRUFBZUEsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21ybTM2MC1iYWNrZW5kLy4vc3JjL21vZGVscy9wcmlzbWFDbGllbnQudHM/N2M1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgdmFyIF9fcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxUaGlzLl9fcHJpc21hIHx8IG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gIGxvZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBbJ3F1ZXJ5JywgJ2Vycm9yJywgJ3dhcm4nXSA6IFsnZXJyb3InXSxcclxufSk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gIGdsb2JhbFRoaXMuX19wcmlzbWEgPSBwcmlzbWE7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHByaXNtYTtcclxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImdsb2JhbFRoaXMiLCJfX3ByaXNtYSIsImxvZyIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/models/prismaClient.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/users/index.ts":
/*!**************************************!*\
  !*** ./src/pages/api/users/index.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../models/prismaClient */ \"(api)/./src/models/prismaClient.ts\");\n/* harmony import */ var _managers_userManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../managers/userManager */ \"(api)/./src/managers/userManager.ts\");\n/* harmony import */ var _middleware_corsMiddleware__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../middleware/corsMiddleware */ \"(api)/./src/middleware/corsMiddleware.ts\");\n/* harmony import */ var _middleware_authMiddleware__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../middleware/authMiddleware */ \"(api)/./src/middleware/authMiddleware.ts\");\n/* harmony import */ var _middleware_permissionMiddleware__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../middleware/permissionMiddleware */ \"(api)/./src/middleware/permissionMiddleware.ts\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../utils/logger */ \"(api)/./src/utils/logger.ts\");\n/* harmony import */ var _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../middleware/errorHandler */ \"(api)/./src/middleware/errorHandler.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__]);\nzod__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n// Validation schemas\nconst createUserSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    email: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email(),\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1).max(100),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1).max(100),\n    displayName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1).max(100).optional(),\n    role: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"ADMIN\",\n        \"EXEC_BOARD\",\n        \"MEMBER\"\n    ]).optional(),\n    paidStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional()\n});\nconst listUsersSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    page: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>parseInt(val || \"1\")),\n    limit: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>parseInt(val || \"20\")),\n    search: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    role: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>{\n        if (val === \"\") return undefined;\n        if (val === \"ADMIN\" || val === \"EXEC_BOARD\" || val === \"MEMBER\") return val;\n        return undefined;\n    }),\n    paidStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>{\n        if (val === \"\") return undefined;\n        if (val === \"true\") return true;\n        if (val === \"false\") return false;\n        return undefined;\n    }),\n    groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>{\n        if (val === \"\") return undefined;\n        return val;\n    }),\n    teamId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>{\n        if (val === \"\") return undefined;\n        return val;\n    }),\n    sortBy: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    sortOrder: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"asc\",\n        \"desc\"\n    ]).optional()\n});\n/**\n * @swagger\n * /api/users:\n *   get:\n *     summary: List users with filtering and pagination\n *     tags: [Users]\n *     security:\n *       - sessionAuth: []\n *     parameters:\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *           default: 1\n *         description: Page number for pagination\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *           default: 20\n *         description: Number of users per page\n *       - in: query\n *         name: search\n *         schema:\n *           type: string\n *         description: Search term for name or email\n *       - in: query\n *         name: role\n *         schema:\n *           type: string\n *           enum: [ADMIN, EXEC_BOARD, MEMBER]\n *         description: Filter by user role\n *       - in: query\n *         name: paidStatus\n *         schema:\n *           type: boolean\n *         description: Filter by paid status\n *       - in: query\n *         name: groupId\n *         schema:\n *           type: string\n *         description: Filter by group membership\n *     responses:\n *       200:\n *         description: List of users\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 users:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/User'\n *                 pagination:\n *                   type: object\n *                   properties:\n *                     page:\n *                       type: integer\n *                     limit:\n *                       type: integer\n *                     total:\n *                       type: integer\n *                     totalPages:\n *                       type: integer\n *       401:\n *         description: Unauthorized\n *       403:\n *         description: Forbidden - insufficient permissions\n *       500:\n *         description: Internal server error\n *   post:\n *     summary: Create a new user\n *     tags: [Users]\n *     security:\n *       - sessionAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - email\n *               - name\n *             properties:\n *               email:\n *                 type: string\n *                 format: email\n *               name:\n *                 type: string\n *                 minLength: 1\n *                 maxLength: 100\n *               role:\n *                 type: string\n *                 enum: [ADMIN, EXEC_BOARD, MEMBER]\n *               paidStatus:\n *                 type: boolean\n *               groupIds:\n *                 type: array\n *                 items:\n *                   type: string\n *     responses:\n *       201:\n *         description: User created successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/User'\n *       400:\n *         description: Bad request - validation error\n *       401:\n *         description: Unauthorized\n *       403:\n *         description: Forbidden - insufficient permissions\n *       500:\n *         description: Internal server error\n */ async function handler(req, res) {\n    const userManager = new _managers_userManager__WEBPACK_IMPORTED_MODULE_2__.UserManager(_models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma);\n    try {\n        if (req.method === \"GET\") {\n            // List users\n            const queryParams = listUsersSchema.parse(req.query);\n            const result = await userManager.getUsers({\n                page: queryParams.page,\n                limit: queryParams.limit,\n                search: queryParams.search,\n                role: queryParams.role,\n                paidStatus: queryParams.paidStatus,\n                groupId: queryParams.groupId\n            });\n            res.status(200).json(result);\n        } else if (req.method === \"POST\") {\n            // Create user\n            const body = createUserSchema.parse(req.body);\n            const user = await userManager.createUser({\n                email: body.email,\n                firstName: body.firstName,\n                lastName: body.lastName,\n                displayName: body.displayName,\n                paidStatus: body.paidStatus,\n                role: body.role\n            });\n            res.status(201).json({\n                success: true,\n                data: user\n            });\n        } else {\n            res.status(405).json({\n                error: \"Method not allowed\"\n            });\n        }\n    } catch (error) {\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_0__.z.ZodError) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_6__.logger.warn(\"Validation error in users API\", {\n                errors: error.errors\n            });\n            return res.status(400).json({\n                error: \"Validation error\",\n                details: error.errors\n            });\n        }\n        // Handle custom API errors (like CONFLICT, NOT_FOUND, etc.)\n        if (error instanceof Error && error.statusCode) {\n            return (0,_middleware_errorHandler__WEBPACK_IMPORTED_MODULE_7__.handleApiError)(error, req, res);\n        }\n        _utils_logger__WEBPACK_IMPORTED_MODULE_6__.logger.error(\"Error in users API\", {\n            error,\n            method: req.method\n        });\n        res.status(500).json({\n            error: \"Internal server error\"\n        });\n    }\n}\n// Apply middleware: CORS, authentication then permissions\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_middleware_corsMiddleware__WEBPACK_IMPORTED_MODULE_3__.withCORS)((0,_middleware_authMiddleware__WEBPACK_IMPORTED_MODULE_4__.withAuth)((0,_middleware_permissionMiddleware__WEBPACK_IMPORTED_MODULE_5__.withPermissions)(handler, [\n    \"users:read\",\n    \"users:create\"\n]))));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/users/index.ts\n");

/***/ }),

/***/ "(api)/./src/utils/logger.ts":
/*!*****************************!*\
  !*** ./src/utils/logger.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\nvar LogLevel;\n(function(LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 1] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 3] = \"ERROR\";\n})(LogLevel || (LogLevel = {}));\nclass Logger {\n    constructor(level = 1){\n        this.level = level;\n    }\n    formatMessage(level, message, meta) {\n        const timestamp = new Date().toISOString();\n        const metaStr = meta ? ` ${JSON.stringify(meta)}` : \"\";\n        return `[${timestamp}] ${level}: ${message}${metaStr}`;\n    }\n    log(level, levelName, message, meta) {\n        if (level >= this.level) {\n            const formattedMessage = this.formatMessage(levelName, message, meta);\n            switch(level){\n                case 3:\n                    console.error(formattedMessage);\n                    break;\n                case 2:\n                    console.warn(formattedMessage);\n                    break;\n                case 1:\n                    console.info(formattedMessage);\n                    break;\n                case 0:\n                    console.debug(formattedMessage);\n                    break;\n            }\n        }\n    }\n    debug(message, meta) {\n        this.log(0, \"DEBUG\", message, meta);\n    }\n    info(message, meta) {\n        this.log(1, \"INFO\", message, meta);\n    }\n    warn(message, meta) {\n        this.log(2, \"WARN\", message, meta);\n    }\n    error(message, meta) {\n        this.log(3, \"ERROR\", message, meta);\n    }\n    setLevel(level) {\n        this.level = level;\n    }\n}\nconst logger = new Logger( true ? 0 : 0);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logger);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvbG9nZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7VUFBWUE7Ozs7O0dBQUFBLGFBQUFBO0FBT1osTUFBTUM7SUFHSkMsWUFBWUMsU0FBK0IsQ0FBRTtRQUMzQyxJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDZjtJQUVRQyxjQUFjRCxLQUFhLEVBQUVFLE9BQWUsRUFBRUMsSUFBVSxFQUFVO1FBQ3hFLE1BQU1DLFlBQVksSUFBSUMsT0FBT0MsV0FBVztRQUN4QyxNQUFNQyxVQUFVSixPQUFPLENBQUMsQ0FBQyxFQUFFSyxLQUFLQyxTQUFTLENBQUNOLE1BQU0sQ0FBQyxHQUFHO1FBQ3BELE9BQU8sQ0FBQyxDQUFDLEVBQUVDLFVBQVUsRUFBRSxFQUFFSixNQUFNLEVBQUUsRUFBRUUsUUFBUSxFQUFFSyxRQUFRLENBQUM7SUFDeEQ7SUFFUUcsSUFBSVYsS0FBZSxFQUFFVyxTQUFpQixFQUFFVCxPQUFlLEVBQUVDLElBQVUsRUFBRTtRQUMzRSxJQUFJSCxTQUFTLElBQUksQ0FBQ0EsS0FBSyxFQUFFO1lBQ3ZCLE1BQU1ZLG1CQUFtQixJQUFJLENBQUNYLGFBQWEsQ0FBQ1UsV0FBV1QsU0FBU0M7WUFFaEUsT0FBUUg7Z0JBQ047b0JBQ0VhLFFBQVFDLEtBQUssQ0FBQ0Y7b0JBQ2Q7Z0JBQ0Y7b0JBQ0VDLFFBQVFFLElBQUksQ0FBQ0g7b0JBQ2I7Z0JBQ0Y7b0JBQ0VDLFFBQVFHLElBQUksQ0FBQ0o7b0JBQ2I7Z0JBQ0Y7b0JBQ0VDLFFBQVFJLEtBQUssQ0FBQ0w7b0JBQ2Q7WUFDSjtRQUNGO0lBQ0Y7SUFFQUssTUFBTWYsT0FBZSxFQUFFQyxJQUFVLEVBQUU7UUFDakMsSUFBSSxDQUFDTyxHQUFHLElBQWlCLFNBQVNSLFNBQVNDO0lBQzdDO0lBRUFhLEtBQUtkLE9BQWUsRUFBRUMsSUFBVSxFQUFFO1FBQ2hDLElBQUksQ0FBQ08sR0FBRyxJQUFnQixRQUFRUixTQUFTQztJQUMzQztJQUVBWSxLQUFLYixPQUFlLEVBQUVDLElBQVUsRUFBRTtRQUNoQyxJQUFJLENBQUNPLEdBQUcsSUFBZ0IsUUFBUVIsU0FBU0M7SUFDM0M7SUFFQVcsTUFBTVosT0FBZSxFQUFFQyxJQUFVLEVBQUU7UUFDakMsSUFBSSxDQUFDTyxHQUFHLElBQWlCLFNBQVNSLFNBQVNDO0lBQzdDO0lBRUFlLFNBQVNsQixLQUFlLEVBQUU7UUFDeEIsSUFBSSxDQUFDQSxLQUFLLEdBQUdBO0lBQ2Y7QUFDRjtBQUVPLE1BQU1tQixTQUFTLElBQUlyQixPQUN4QnNCLEtBQXlCLFVBQ3pCO0FBRUYsaUVBQWVELE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tcm0zNjAtYmFja2VuZC8uL3NyYy91dGlscy9sb2dnZXIudHM/N2NmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBMb2dMZXZlbCB7XHJcbiAgREVCVUcgPSAwLFxyXG4gIElORk8gPSAxLFxyXG4gIFdBUk4gPSAyLFxyXG4gIEVSUk9SID0gM1xyXG59XHJcblxyXG5jbGFzcyBMb2dnZXIge1xyXG4gIHByaXZhdGUgbGV2ZWw6IExvZ0xldmVsO1xyXG5cclxuICBjb25zdHJ1Y3RvcihsZXZlbDogTG9nTGV2ZWwgPSBMb2dMZXZlbC5JTkZPKSB7XHJcbiAgICB0aGlzLmxldmVsID0gbGV2ZWw7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGZvcm1hdE1lc3NhZ2UobGV2ZWw6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KTogc3RyaW5nIHtcclxuICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcclxuICAgIGNvbnN0IG1ldGFTdHIgPSBtZXRhID8gYCAke0pTT04uc3RyaW5naWZ5KG1ldGEpfWAgOiAnJztcclxuICAgIHJldHVybiBgWyR7dGltZXN0YW1wfV0gJHtsZXZlbH06ICR7bWVzc2FnZX0ke21ldGFTdHJ9YDtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgbG9nKGxldmVsOiBMb2dMZXZlbCwgbGV2ZWxOYW1lOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZywgbWV0YT86IGFueSkge1xyXG4gICAgaWYgKGxldmVsID49IHRoaXMubGV2ZWwpIHtcclxuICAgICAgY29uc3QgZm9ybWF0dGVkTWVzc2FnZSA9IHRoaXMuZm9ybWF0TWVzc2FnZShsZXZlbE5hbWUsIG1lc3NhZ2UsIG1ldGEpO1xyXG4gICAgICBcclxuICAgICAgc3dpdGNoIChsZXZlbCkge1xyXG4gICAgICAgIGNhc2UgTG9nTGV2ZWwuRVJST1I6XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGZvcm1hdHRlZE1lc3NhZ2UpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5XQVJOOlxyXG4gICAgICAgICAgY29uc29sZS53YXJuKGZvcm1hdHRlZE1lc3NhZ2UpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5JTkZPOlxyXG4gICAgICAgICAgY29uc29sZS5pbmZvKGZvcm1hdHRlZE1lc3NhZ2UpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5ERUJVRzpcclxuICAgICAgICAgIGNvbnNvbGUuZGVidWcoZm9ybWF0dGVkTWVzc2FnZSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVidWcobWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KSB7XHJcbiAgICB0aGlzLmxvZyhMb2dMZXZlbC5ERUJVRywgJ0RFQlVHJywgbWVzc2FnZSwgbWV0YSk7XHJcbiAgfVxyXG5cclxuICBpbmZvKG1lc3NhZ2U6IHN0cmluZywgbWV0YT86IGFueSkge1xyXG4gICAgdGhpcy5sb2coTG9nTGV2ZWwuSU5GTywgJ0lORk8nLCBtZXNzYWdlLCBtZXRhKTtcclxuICB9XHJcblxyXG4gIHdhcm4obWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KSB7XHJcbiAgICB0aGlzLmxvZyhMb2dMZXZlbC5XQVJOLCAnV0FSTicsIG1lc3NhZ2UsIG1ldGEpO1xyXG4gIH1cclxuXHJcbiAgZXJyb3IobWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KSB7XHJcbiAgICB0aGlzLmxvZyhMb2dMZXZlbC5FUlJPUiwgJ0VSUk9SJywgbWVzc2FnZSwgbWV0YSk7XHJcbiAgfVxyXG5cclxuICBzZXRMZXZlbChsZXZlbDogTG9nTGV2ZWwpIHtcclxuICAgIHRoaXMubGV2ZWwgPSBsZXZlbDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKFxyXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gTG9nTGV2ZWwuREVCVUcgOiBMb2dMZXZlbC5JTkZPXHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBsb2dnZXI7XHJcbiJdLCJuYW1lcyI6WyJMb2dMZXZlbCIsIkxvZ2dlciIsImNvbnN0cnVjdG9yIiwibGV2ZWwiLCJmb3JtYXRNZXNzYWdlIiwibWVzc2FnZSIsIm1ldGEiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJtZXRhU3RyIiwiSlNPTiIsInN0cmluZ2lmeSIsImxvZyIsImxldmVsTmFtZSIsImZvcm1hdHRlZE1lc3NhZ2UiLCJjb25zb2xlIiwiZXJyb3IiLCJ3YXJuIiwiaW5mbyIsImRlYnVnIiwic2V0TGV2ZWwiLCJsb2dnZXIiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/utils/logger.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fusers&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fusers%2Findex.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();