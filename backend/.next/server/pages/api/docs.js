"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/docs";
exports.ids = ["pages/api/docs"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdocs&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fdocs.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdocs&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fdocs.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_docs_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/docs.ts */ \"(api)/./src/pages/api/docs.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_docs_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_docs_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/docs\",\n        pathname: \"/api/docs\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_docs_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmRvY3MmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlMkZwYWdlcyUyRmFwaSUyRmRvY3MudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDb0Q7QUFDcEQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLG1EQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxtREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tcm0zNjAtYmFja2VuZC8/YWU0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vc3JjL3BhZ2VzL2FwaS9kb2NzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZG9jc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2RvY3NcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdocs&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fdocs.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/docs.ts":
/*!*******************************!*\
  !*** ./src/pages/api/docs.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/swagger */ \"(api)/./src/utils/swagger.ts\");\n\nfunction handler(req, res) {\n    if (req.method === \"GET\") {\n        // Return the OpenAPI specification\n        res.setHeader(\"Content-Type\", \"application/json\");\n        res.status(200).json(_utils_swagger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].generateSpec());\n    } else {\n        res.setHeader(\"Allow\", [\n            \"GET\"\n        ]);\n        res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL2RvY3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDMEM7QUFFM0IsU0FBU0MsUUFBUUMsR0FBbUIsRUFBRUMsR0FBb0I7SUFDdkUsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLE9BQU87UUFDeEIsbUNBQW1DO1FBQ25DRCxJQUFJRSxTQUFTLENBQUMsZ0JBQWdCO1FBQzlCRixJQUFJRyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDUCxtRUFBb0I7SUFDM0MsT0FBTztRQUNMRyxJQUFJRSxTQUFTLENBQUMsU0FBUztZQUFDO1NBQU07UUFDOUJGLElBQUlHLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUUsT0FBTztRQUFxQjtJQUNyRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvLi9zcmMvcGFnZXMvYXBpL2RvY3MudHM/MTVlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCBzd2FnZ2VyIGZyb20gJy4uLy4uL3V0aWxzL3N3YWdnZXInO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xyXG4gIGlmIChyZXEubWV0aG9kID09PSAnR0VUJykge1xyXG4gICAgLy8gUmV0dXJuIHRoZSBPcGVuQVBJIHNwZWNpZmljYXRpb25cclxuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihzd2FnZ2VyLmdlbmVyYXRlU3BlYygpKTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmVzLnNldEhlYWRlcignQWxsb3cnLCBbJ0dFVCddKTtcclxuICAgIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsic3dhZ2dlciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzZXRIZWFkZXIiLCJzdGF0dXMiLCJqc29uIiwiZ2VuZXJhdGVTcGVjIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/docs.ts\n");

/***/ }),

/***/ "(api)/./src/utils/swagger.ts":
/*!******************************!*\
  !*** ./src/utils/swagger.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SwaggerGenerator: () => (/* binding */ SwaggerGenerator),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   swagger: () => (/* binding */ swagger)\n/* harmony export */ });\nclass SwaggerGenerator {\n    addRoute(route) {\n        this.routes.push(route);\n    }\n    addSchema(name, schema) {\n        this.schemas[name] = schema;\n    }\n    generateSpec() {\n        return {\n            openapi: \"3.0.0\",\n            info: {\n                title: \"MRM360 API\",\n                description: \"API for MRM360 management system\",\n                version: \"1.0.0\",\n                contact: {\n                    name: \"MRM360 Team\",\n                    email: \"support@mrm360.com\"\n                }\n            },\n            servers: [\n                {\n                    url: \"http://localhost:3010\" || 0,\n                    description: \"Development server\"\n                }\n            ],\n            components: {\n                securitySchemes: {\n                    sessionAuth: {\n                        type: \"apiKey\",\n                        in: \"cookie\",\n                        name: \"session\"\n                    },\n                    bearerAuth: {\n                        type: \"http\",\n                        scheme: \"bearer\",\n                        bearerFormat: \"JWT\"\n                    }\n                },\n                schemas: this.schemas\n            },\n            paths: this.generatePaths(),\n            tags: [\n                {\n                    name: \"Authentication\",\n                    description: \"Authentication endpoints\"\n                },\n                {\n                    name: \"Users\",\n                    description: \"User management endpoints\"\n                },\n                {\n                    name: \"Teams\",\n                    description: \"Team management endpoints\"\n                },\n                {\n                    name: \"Events\",\n                    description: \"Event management endpoints\"\n                },\n                {\n                    name: \"Groups\",\n                    description: \"Group management endpoints\"\n                },\n                {\n                    name: \"Tasks\",\n                    description: \"Background task endpoints\"\n                }\n            ]\n        };\n    }\n    generatePaths() {\n        const paths = {};\n        this.routes.forEach((route)=>{\n            if (!paths[route.path]) {\n                paths[route.path] = {};\n            }\n            paths[route.path][route.method.toLowerCase()] = {\n                summary: route.summary,\n                description: route.description,\n                tags: route.tags,\n                security: route.security,\n                parameters: route.parameters || [],\n                requestBody: route.requestBody,\n                responses: route.responses\n            };\n        });\n        return paths;\n    }\n    constructor(){\n        this.routes = [];\n        this.schemas = {};\n    }\n}\n// Create global swagger instance\nconst swagger = new SwaggerGenerator();\n// Define common schemas\nswagger.addSchema(\"User\", {\n    type: \"object\",\n    properties: {\n        id: {\n            type: \"string\",\n            format: \"uuid\"\n        },\n        email: {\n            type: \"string\",\n            format: \"email\"\n        },\n        firstName: {\n            type: \"string\"\n        },\n        lastName: {\n            type: \"string\"\n        },\n        paidStatus: {\n            type: \"boolean\"\n        },\n        qrCode: {\n            type: \"string\"\n        },\n        role: {\n            type: \"string\",\n            enum: [\n                \"admin\",\n                \"exec-board\",\n                \"member\"\n            ]\n        },\n        createdAt: {\n            type: \"string\",\n            format: \"date-time\"\n        },\n        updatedAt: {\n            type: \"string\",\n            format: \"date-time\"\n        }\n    },\n    required: [\n        \"email\",\n        \"firstName\",\n        \"lastName\",\n        \"role\"\n    ]\n});\nswagger.addSchema(\"Team\", {\n    type: \"object\",\n    properties: {\n        id: {\n            type: \"string\",\n            format: \"uuid\"\n        },\n        name: {\n            type: \"string\"\n        },\n        description: {\n            type: \"string\"\n        },\n        type: {\n            type: \"string\",\n            enum: [\n                \"competition\",\n                \"development\"\n            ]\n        },\n        subtype: {\n            type: \"string\",\n            enum: [\n                \"blue\",\n                \"red\",\n                \"ctf\"\n            ]\n        },\n        groupId: {\n            type: \"string\",\n            format: \"uuid\"\n        },\n        parentTeamId: {\n            type: \"string\",\n            format: \"uuid\"\n        },\n        createdAt: {\n            type: \"string\",\n            format: \"date-time\"\n        },\n        updatedAt: {\n            type: \"string\",\n            format: \"date-time\"\n        }\n    },\n    required: [\n        \"name\",\n        \"type\"\n    ]\n});\nswagger.addSchema(\"Event\", {\n    type: \"object\",\n    properties: {\n        id: {\n            type: \"string\",\n            format: \"uuid\"\n        },\n        title: {\n            type: \"string\"\n        },\n        description: {\n            type: \"string\"\n        },\n        startTime: {\n            type: \"string\",\n            format: \"date-time\"\n        },\n        endTime: {\n            type: \"string\",\n            format: \"date-time\"\n        },\n        category: {\n            type: \"string\"\n        },\n        linkedTeamId: {\n            type: \"string\",\n            format: \"uuid\"\n        },\n        attendanceType: {\n            type: \"string\",\n            enum: [\n                \"strict\",\n                \"soft\"\n            ]\n        },\n        createdAt: {\n            type: \"string\",\n            format: \"date-time\"\n        },\n        updatedAt: {\n            type: \"string\",\n            format: \"date-time\"\n        }\n    },\n    required: [\n        \"title\",\n        \"startTime\",\n        \"endTime\",\n        \"attendanceType\"\n    ]\n});\nswagger.addSchema(\"Group\", {\n    type: \"object\",\n    properties: {\n        id: {\n            type: \"string\",\n            format: \"uuid\"\n        },\n        name: {\n            type: \"string\"\n        },\n        description: {\n            type: \"string\"\n        },\n        externalId: {\n            type: \"string\"\n        },\n        createdAt: {\n            type: \"string\",\n            format: \"date-time\"\n        },\n        updatedAt: {\n            type: \"string\",\n            format: \"date-time\"\n        }\n    },\n    required: [\n        \"name\"\n    ]\n});\nswagger.addSchema(\"Error\", {\n    type: \"object\",\n    properties: {\n        error: {\n            type: \"string\"\n        },\n        message: {\n            type: \"string\"\n        },\n        statusCode: {\n            type: \"integer\"\n        }\n    }\n});\nswagger.addSchema(\"Success\", {\n    type: \"object\",\n    properties: {\n        success: {\n            type: \"boolean\"\n        },\n        message: {\n            type: \"string\"\n        },\n        data: {\n            type: \"object\"\n        }\n    }\n});\n// Add routes to swagger\n// Authentication endpoints\nswagger.addRoute({\n    path: \"/api/auth/login\",\n    method: \"POST\",\n    summary: \"User authentication\",\n    description: \"Authenticate user with username/password or OIDC code\",\n    tags: [\n        \"Authentication\"\n    ],\n    requestBody: {\n        content: {\n            \"application/json\": {\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        username: {\n                            type: \"string\",\n                            description: \"Username or email for password auth\"\n                        },\n                        password: {\n                            type: \"string\",\n                            description: \"Password for password auth\"\n                        },\n                        code: {\n                            type: \"string\",\n                            description: \"OIDC authorization code\"\n                        },\n                        state: {\n                            type: \"string\",\n                            description: \"OIDC state parameter\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    responses: {\n        \"200\": {\n            description: \"Authentication successful\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"object\",\n                        properties: {\n                            token: {\n                                type: \"string\",\n                                description: \"JWT token\"\n                            },\n                            user: {\n                                type: \"object\",\n                                properties: {\n                                    id: {\n                                        type: \"string\"\n                                    },\n                                    email: {\n                                        type: \"string\"\n                                    },\n                                    username: {\n                                        type: \"string\"\n                                    },\n                                    firstName: {\n                                        type: \"string\"\n                                    },\n                                    lastName: {\n                                        type: \"string\"\n                                    },\n                                    displayName: {\n                                        type: \"string\"\n                                    },\n                                    role: {\n                                        type: \"string\"\n                                    },\n                                    paidStatus: {\n                                        type: \"boolean\"\n                                    },\n                                    authentikGroups: {\n                                        type: \"array\",\n                                        items: {\n                                            type: \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"400\": {\n            description: \"Invalid request or authentication failed\"\n        },\n        \"401\": {\n            description: \"Invalid credentials\"\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/auth/session\",\n    method: \"GET\",\n    summary: \"Get current session\",\n    description: \"Retrieve the current user session information using JWT token\",\n    tags: [\n        \"Authentication\"\n    ],\n    security: [\n        {\n            bearerAuth: []\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"Current session data\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"object\",\n                        properties: {\n                            user: {\n                                type: \"object\",\n                                properties: {\n                                    id: {\n                                        type: \"string\"\n                                    },\n                                    email: {\n                                        type: \"string\"\n                                    },\n                                    username: {\n                                        type: \"string\"\n                                    },\n                                    firstName: {\n                                        type: \"string\"\n                                    },\n                                    lastName: {\n                                        type: \"string\"\n                                    },\n                                    displayName: {\n                                        type: \"string\"\n                                    },\n                                    role: {\n                                        type: \"string\"\n                                    },\n                                    paidStatus: {\n                                        type: \"boolean\"\n                                    },\n                                    authentikGroups: {\n                                        type: \"array\",\n                                        items: {\n                                            type: \"string\"\n                                        }\n                                    },\n                                    abilities: {\n                                        type: \"array\",\n                                        items: {\n                                            type: \"object\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"401\": {\n            description: \"No valid token provided\"\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/auth/logout\",\n    method: \"POST\",\n    summary: \"User logout\",\n    description: \"Logout the current user (frontend handles token cleanup)\",\n    tags: [\n        \"Authentication\"\n    ],\n    responses: {\n        \"200\": {\n            description: \"Logout successful\"\n        }\n    }\n});\n// User profile endpoint\nswagger.addRoute({\n    path: \"/api/user/profile\",\n    method: \"GET\",\n    summary: \"Get current user profile\",\n    description: \"Retrieve the current authenticated user profile\",\n    tags: [\n        \"Users\"\n    ],\n    security: [\n        {\n            bearerAuth: []\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"User profile data\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"object\",\n                        properties: {\n                            success: {\n                                type: \"boolean\"\n                            },\n                            data: {\n                                type: \"object\",\n                                properties: {\n                                    id: {\n                                        type: \"string\"\n                                    },\n                                    email: {\n                                        type: \"string\"\n                                    },\n                                    username: {\n                                        type: \"string\"\n                                    },\n                                    firstName: {\n                                        type: \"string\"\n                                    },\n                                    lastName: {\n                                        type: \"string\"\n                                    },\n                                    role: {\n                                        type: \"string\"\n                                    },\n                                    groups: {\n                                        type: \"array\",\n                                        items: {\n                                            type: \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"401\": {\n            description: \"Unauthorized - invalid or missing token\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Error\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/auth/logout\",\n    method: \"POST\",\n    summary: \"Logout user\",\n    description: \"Logs out the current user and clears session\",\n    tags: [\n        \"Authentication\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"Logout successful\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Success\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/users\",\n    method: \"GET\",\n    summary: \"Get users\",\n    description: \"Retrieve list of users with optional filtering\",\n    tags: [\n        \"Users\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    parameters: [\n        {\n            name: \"search\",\n            in: \"query\",\n            schema: {\n                type: \"string\"\n            },\n            description: \"Search by name or email\"\n        },\n        {\n            name: \"paidStatus\",\n            in: \"query\",\n            schema: {\n                type: \"boolean\"\n            },\n            description: \"Filter by paid status\"\n        },\n        {\n            name: \"role\",\n            in: \"query\",\n            schema: {\n                type: \"string\",\n                enum: [\n                    \"admin\",\n                    \"exec-board\",\n                    \"member\"\n                ]\n            },\n            description: \"Filter by role\"\n        },\n        {\n            name: \"page\",\n            in: \"query\",\n            schema: {\n                type: \"integer\",\n                minimum: 1\n            },\n            description: \"Page number\"\n        },\n        {\n            name: \"limit\",\n            in: \"query\",\n            schema: {\n                type: \"integer\",\n                minimum: 1,\n                maximum: 100\n            },\n            description: \"Items per page\"\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"List of users\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"object\",\n                        properties: {\n                            users: {\n                                type: \"array\",\n                                items: {\n                                    $ref: \"#/components/schemas/User\"\n                                }\n                            },\n                            total: {\n                                type: \"integer\"\n                            },\n                            page: {\n                                type: \"integer\"\n                            },\n                            limit: {\n                                type: \"integer\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/users\",\n    method: \"POST\",\n    summary: \"Create user\",\n    description: \"Create a new user\",\n    tags: [\n        \"Users\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    requestBody: {\n        required: true,\n        content: {\n            \"application/json\": {\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        email: {\n                            type: \"string\",\n                            format: \"email\"\n                        },\n                        firstName: {\n                            type: \"string\"\n                        },\n                        lastName: {\n                            type: \"string\"\n                        },\n                        role: {\n                            type: \"string\",\n                            enum: [\n                                \"admin\",\n                                \"exec-board\",\n                                \"member\"\n                            ]\n                        },\n                        paidStatus: {\n                            type: \"boolean\"\n                        }\n                    },\n                    required: [\n                        \"email\",\n                        \"firstName\",\n                        \"lastName\",\n                        \"role\"\n                    ]\n                }\n            }\n        }\n    },\n    responses: {\n        \"201\": {\n            description: \"User created successfully\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/User\"\n                    }\n                }\n            }\n        },\n        \"400\": {\n            description: \"Bad request\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Error\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/users/{id}\",\n    method: \"GET\",\n    summary: \"Get user by ID\",\n    description: \"Retrieve a specific user by ID\",\n    tags: [\n        \"Users\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    parameters: [\n        {\n            name: \"id\",\n            in: \"path\",\n            required: true,\n            schema: {\n                type: \"string\",\n                format: \"uuid\"\n            }\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"User details\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/User\"\n                    }\n                }\n            }\n        },\n        \"404\": {\n            description: \"User not found\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Error\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/users/{id}\",\n    method: \"PUT\",\n    summary: \"Update user\",\n    description: \"Update an existing user\",\n    tags: [\n        \"Users\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    parameters: [\n        {\n            name: \"id\",\n            in: \"path\",\n            required: true,\n            schema: {\n                type: \"string\",\n                format: \"uuid\"\n            }\n        }\n    ],\n    requestBody: {\n        required: true,\n        content: {\n            \"application/json\": {\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        email: {\n                            type: \"string\",\n                            format: \"email\"\n                        },\n                        firstName: {\n                            type: \"string\"\n                        },\n                        lastName: {\n                            type: \"string\"\n                        },\n                        role: {\n                            type: \"string\",\n                            enum: [\n                                \"admin\",\n                                \"exec-board\",\n                                \"member\"\n                            ]\n                        },\n                        paidStatus: {\n                            type: \"boolean\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    responses: {\n        \"200\": {\n            description: \"User updated successfully\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/User\"\n                    }\n                }\n            }\n        },\n        \"404\": {\n            description: \"User not found\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Error\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/users/{id}\",\n    method: \"DELETE\",\n    summary: \"Delete user\",\n    description: \"Delete a user\",\n    tags: [\n        \"Users\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    parameters: [\n        {\n            name: \"id\",\n            in: \"path\",\n            required: true,\n            schema: {\n                type: \"string\",\n                format: \"uuid\"\n            }\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"User deleted successfully\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Success\"\n                    }\n                }\n            }\n        },\n        \"404\": {\n            description: \"User not found\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Error\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/teams\",\n    method: \"GET\",\n    summary: \"Get teams\",\n    description: \"Retrieve list of teams\",\n    tags: [\n        \"Teams\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    parameters: [\n        {\n            name: \"type\",\n            in: \"query\",\n            schema: {\n                type: \"string\",\n                enum: [\n                    \"competition\",\n                    \"development\"\n                ]\n            },\n            description: \"Filter by team type\"\n        },\n        {\n            name: \"groupId\",\n            in: \"query\",\n            schema: {\n                type: \"string\",\n                format: \"uuid\"\n            },\n            description: \"Filter by group ID\"\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"List of teams\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"array\",\n                        items: {\n                            $ref: \"#/components/schemas/Team\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/teams\",\n    method: \"POST\",\n    summary: \"Create team\",\n    description: \"Create a new team\",\n    tags: [\n        \"Teams\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    requestBody: {\n        required: true,\n        content: {\n            \"application/json\": {\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        name: {\n                            type: \"string\"\n                        },\n                        description: {\n                            type: \"string\"\n                        },\n                        type: {\n                            type: \"string\",\n                            enum: [\n                                \"competition\",\n                                \"development\"\n                            ]\n                        },\n                        subtype: {\n                            type: \"string\",\n                            enum: [\n                                \"blue\",\n                                \"red\",\n                                \"ctf\"\n                            ]\n                        },\n                        groupId: {\n                            type: \"string\",\n                            format: \"uuid\"\n                        },\n                        parentTeamId: {\n                            type: \"string\",\n                            format: \"uuid\"\n                        }\n                    },\n                    required: [\n                        \"name\",\n                        \"type\"\n                    ]\n                }\n            }\n        }\n    },\n    responses: {\n        \"201\": {\n            description: \"Team created successfully\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Team\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/events\",\n    method: \"GET\",\n    summary: \"Get events\",\n    description: \"Retrieve list of events\",\n    tags: [\n        \"Events\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    parameters: [\n        {\n            name: \"category\",\n            in: \"query\",\n            schema: {\n                type: \"string\"\n            },\n            description: \"Filter by category\"\n        },\n        {\n            name: \"linkedTeamId\",\n            in: \"query\",\n            schema: {\n                type: \"string\",\n                format: \"uuid\"\n            },\n            description: \"Filter by linked team\"\n        },\n        {\n            name: \"startDate\",\n            in: \"query\",\n            schema: {\n                type: \"string\",\n                format: \"date\"\n            },\n            description: \"Filter by start date\"\n        },\n        {\n            name: \"endDate\",\n            in: \"query\",\n            schema: {\n                type: \"string\",\n                format: \"date\"\n            },\n            description: \"Filter by end date\"\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"List of events\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"array\",\n                        items: {\n                            $ref: \"#/components/schemas/Event\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/events\",\n    method: \"POST\",\n    summary: \"Create event\",\n    description: \"Create a new event\",\n    tags: [\n        \"Events\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    requestBody: {\n        required: true,\n        content: {\n            \"application/json\": {\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        title: {\n                            type: \"string\"\n                        },\n                        description: {\n                            type: \"string\"\n                        },\n                        startTime: {\n                            type: \"string\",\n                            format: \"date-time\"\n                        },\n                        endTime: {\n                            type: \"string\",\n                            format: \"date-time\"\n                        },\n                        category: {\n                            type: \"string\"\n                        },\n                        linkedTeamId: {\n                            type: \"string\",\n                            format: \"uuid\"\n                        },\n                        attendanceType: {\n                            type: \"string\",\n                            enum: [\n                                \"strict\",\n                                \"soft\"\n                            ]\n                        }\n                    },\n                    required: [\n                        \"title\",\n                        \"startTime\",\n                        \"endTime\",\n                        \"attendanceType\"\n                    ]\n                }\n            }\n        }\n    },\n    responses: {\n        \"201\": {\n            description: \"Event created successfully\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        $ref: \"#/components/schemas/Event\"\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/groups\",\n    method: \"GET\",\n    summary: \"Get groups\",\n    description: \"Retrieve list of Authentik groups\",\n    tags: [\n        \"Groups\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    responses: {\n        \"200\": {\n            description: \"List of groups\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"array\",\n                        items: {\n                            $ref: \"#/components/schemas/Group\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\nswagger.addRoute({\n    path: \"/api/tasks/enqueue\",\n    method: \"POST\",\n    summary: \"Enqueue background task\",\n    description: \"Enqueue a background task for processing\",\n    tags: [\n        \"Tasks\"\n    ],\n    security: [\n        {\n            sessionAuth: []\n        }\n    ],\n    requestBody: {\n        required: true,\n        content: {\n            \"application/json\": {\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        taskType: {\n                            type: \"string\",\n                            enum: [\n                                \"sendEmail\",\n                                \"generateQRCode\",\n                                \"syncGroups\"\n                            ]\n                        },\n                        data: {\n                            type: \"object\",\n                            description: \"Task-specific data\"\n                        }\n                    },\n                    required: [\n                        \"taskType\",\n                        \"data\"\n                    ]\n                }\n            }\n        }\n    },\n    responses: {\n        \"200\": {\n            description: \"Task enqueued successfully\",\n            content: {\n                \"application/json\": {\n                    schema: {\n                        type: \"object\",\n                        properties: {\n                            jobId: {\n                                type: \"string\"\n                            },\n                            message: {\n                                type: \"string\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (swagger);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/utils/swagger.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdocs&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fdocs.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();