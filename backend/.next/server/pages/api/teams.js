"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/teams";
exports.ids = ["pages/api/teams"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bullmq":
/*!*************************!*\
  !*** external "bullmq" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("bullmq");

/***/ }),

/***/ "ioredis":
/*!**************************!*\
  !*** external "ioredis" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("ioredis");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fteams&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fteams%2Findex.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fteams&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fteams%2Findex.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_teams_index_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/teams/index.ts */ \"(api)/./src/pages/api/teams/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_teams_index_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_teams_index_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_teams_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_teams_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/teams\",\n        pathname: \"/api/teams\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_teams_index_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnRlYW1zJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTJGcGFnZXMlMkZhcGklMkZ0ZWFtcyUyRmluZGV4LnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzJEO0FBQzNEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywwREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsMERBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvP2NhZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyYy9wYWdlcy9hcGkvdGVhbXMvaW5kZXgudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90ZWFtc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3RlYW1zXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fteams&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fteams%2Findex.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/managers/backgroundTaskManager.ts":
/*!***********************************************!*\
  !*** ./src/managers/backgroundTaskManager.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BackgroundTaskManager: () => (/* binding */ BackgroundTaskManager)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/logger */ \"(api)/./src/utils/logger.ts\");\n\n\nclass BackgroundTaskManager {\n    constructor(prisma){\n        this.prisma = prisma;\n    }\n    async createTask(params) {\n        const { name, description, entityType, entityId, subtaskNames = [] } = params;\n        try {\n            // Create parent task\n            const parentTask = await this.prisma.backgroundTask.create({\n                data: {\n                    name,\n                    description,\n                    entityType,\n                    entityId,\n                    status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.PENDING,\n                    progress: 0\n                }\n            });\n            // Create subtasks as child BackgroundTask records\n            if (subtaskNames.length > 0) {\n                await this.prisma.backgroundTask.createMany({\n                    data: subtaskNames.map((subtaskName, index)=>({\n                            name: subtaskName,\n                            parentTaskId: parentTask.id,\n                            stepIndex: index,\n                            status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.PENDING,\n                            progress: 0\n                        }))\n                });\n            }\n            const fullTask = await this.prisma.backgroundTask.findUnique({\n                where: {\n                    id: parentTask.id\n                },\n                include: {\n                    subtasks: true\n                }\n            });\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(\"Background task created\", {\n                taskId: parentTask.id,\n                name\n            });\n            // non-null by construction\n            return fullTask;\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Failed to create background task\", {\n                error,\n                name\n            });\n            throw error;\n        }\n    }\n    async markTaskRunning(taskId) {\n        await this.prisma.backgroundTask.update({\n            where: {\n                id: taskId\n            },\n            data: {\n                status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.RUNNING,\n                startedAt: new Date()\n            }\n        });\n    }\n    async updateTaskProgress(taskId, progress) {\n        await this.prisma.backgroundTask.update({\n            where: {\n                id: taskId\n            },\n            data: {\n                progress\n            }\n        });\n    }\n    async markTaskCompleted(taskId, result) {\n        await this.prisma.backgroundTask.update({\n            where: {\n                id: taskId\n            },\n            data: {\n                status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.COMPLETED,\n                finishedAt: new Date(),\n                progress: 100,\n                result\n            }\n        });\n    }\n    async markTaskFailed(taskId, errorMessage) {\n        await this.prisma.backgroundTask.update({\n            where: {\n                id: taskId\n            },\n            data: {\n                status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.FAILED,\n                finishedAt: new Date(),\n                error: errorMessage\n            }\n        });\n    }\n    async markSubtaskRunning(taskId, stepIndex) {\n        const subtaskId = await this.getSubtaskId(taskId, stepIndex);\n        const subtask = await this.prisma.backgroundTask.update({\n            where: {\n                id: subtaskId\n            },\n            data: {\n                status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.RUNNING,\n                startedAt: new Date(),\n                progress: 0\n            }\n        });\n        return subtask;\n    }\n    async updateSubtaskProgress(taskId, stepIndex, progress) {\n        await this.prisma.backgroundTask.update({\n            where: {\n                id: await this.getSubtaskId(taskId, stepIndex)\n            },\n            data: {\n                progress\n            }\n        });\n    }\n    async markSubtaskCompleted(taskId, stepIndex, result) {\n        await this.prisma.backgroundTask.update({\n            where: {\n                id: await this.getSubtaskId(taskId, stepIndex)\n            },\n            data: {\n                status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.COMPLETED,\n                finishedAt: new Date(),\n                progress: 100,\n                result\n            }\n        });\n    }\n    async markSubtaskFailed(taskId, stepIndex, errorMessage) {\n        await this.prisma.backgroundTask.update({\n            where: {\n                id: await this.getSubtaskId(taskId, stepIndex)\n            },\n            data: {\n                status: _prisma_client__WEBPACK_IMPORTED_MODULE_0__.TaskStatus.FAILED,\n                finishedAt: new Date(),\n                error: errorMessage\n            }\n        });\n    }\n    async getTask(taskId) {\n        return this.prisma.backgroundTask.findUnique({\n            where: {\n                id: taskId\n            },\n            include: {\n                subtasks: true\n            }\n        });\n    }\n    async listTasks(params = {}) {\n        const page = params.page || 1;\n        const limit = params.limit || 20;\n        const skip = (page - 1) * limit;\n        const where = {};\n        if (params.entityType) where.entityType = params.entityType;\n        if (params.entityId) where.entityId = params.entityId;\n        const [total, tasks] = await Promise.all([\n            this.prisma.backgroundTask.count({\n                where\n            }),\n            this.prisma.backgroundTask.findMany({\n                where,\n                orderBy: {\n                    createdAt: \"desc\"\n                },\n                skip,\n                take: limit,\n                include: {\n                    subtasks: true\n                }\n            })\n        ]);\n        return {\n            data: tasks,\n            pagination: {\n                page,\n                limit,\n                total,\n                totalPages: Math.ceil(total / limit)\n            }\n        };\n    }\n    async getSubtaskId(taskId, stepIndex) {\n        const subtask = await this.prisma.backgroundTask.findFirst({\n            where: {\n                parentTaskId: taskId,\n                stepIndex\n            }\n        });\n        if (!subtask) {\n            throw new Error(`Subtask not found for task ${taskId} at step ${stepIndex}`);\n        }\n        return subtask.id;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/managers/backgroundTaskManager.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/authMiddleware.ts":
/*!******************************************!*\
  !*** ./src/middleware/authMiddleware.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withAuth: () => (/* binding */ withAuth)\n/* harmony export */ });\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/logger */ \"(api)/./src/utils/logger.ts\");\n/* harmony import */ var _utils_roleUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/roleUtils */ \"(api)/./src/utils/roleUtils.ts\");\n\n\n// Helper function to determine effective role based on OIDC groups\nfunction getEffectiveRole(userRole, authentikGroups) {\n    // If user has tech-team group, elevate to admin regardless of base role\n    if (authentikGroups.includes(\"tech-team\")) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(\"User has tech-team group, elevating to admin role\", {\n            originalRole: userRole,\n            authentikGroups\n        });\n        return \"ADMIN\";\n    }\n    // Get the effective system role, ensuring it's not a class rank role\n    return (0,_utils_roleUtils__WEBPACK_IMPORTED_MODULE_1__.getEffectiveSystemRole)(userRole);\n}\nfunction withAuth(handler) {\n    return async (req, res)=>{\n        try {\n            // Get the authorization header\n            const authHeader = req.headers.authorization;\n            if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"Missing or invalid authorization header\"\n                });\n            }\n            // Extract the token\n            const token = authHeader.substring(7);\n            // Verify the JWT token\n            const decoded = verifyJWT(token);\n            if (!decoded || !decoded.id) {\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"Invalid token\"\n                });\n            }\n            // Get user from database\n            const user = await getUserById(decoded.id);\n            if (!user) {\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"User not found\"\n                });\n            }\n            // Determine effective role based on OIDC groups and system role\n            const effectiveRole = getEffectiveRole(user.role, user.authentikGroups || []);\n            // Add user info to request\n            req.user = {\n                id: user.id,\n                email: user.email,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                role: effectiveRole,\n                groups: user.authentikGroups || []\n            };\n            _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(\"User authenticated successfully\", {\n                userId: user.id,\n                email: user.email,\n                originalRole: user.role,\n                effectiveRole,\n                authentikGroups: user.authentikGroups\n            });\n            // Call the original handler\n            await handler(req, res);\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.error(\"Authentication error:\", error);\n            return res.status(401).json({\n                error: \"Unauthorized\",\n                message: \"Authentication failed\"\n            });\n        }\n    };\n}\n// Helper function to verify JWT token\nfunction verifyJWT(token) {\n    try {\n        const jwt = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n        const secret = process.env.JWT_SECRET;\n        if (!secret) {\n            throw new Error(\"JWT_SECRET not configured\");\n        }\n        return jwt.verify(token, secret);\n    } catch (error) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.error(\"JWT verification failed:\", error);\n        return null;\n    }\n}\n// Helper function to get user by ID\nasync function getUserById(userId) {\n    try {\n        const { prisma } = __webpack_require__(/*! @/models/prismaClient */ \"(api)/./src/models/prismaClient.ts\");\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            select: {\n                id: true,\n                email: true,\n                firstName: true,\n                lastName: true,\n                role: true,\n                authentikId: true\n            }\n        });\n        if (!user) {\n            return null;\n        }\n        // For now, we'll assume authentikGroups is empty\n        // This would need to be populated from the OIDC provider\n        user.authentikGroups = [];\n        return user;\n    } catch (error) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.error(\"Error getting user by ID:\", error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/middleware/authMiddleware.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/corsMiddleware.ts":
/*!******************************************!*\
  !*** ./src/middleware/corsMiddleware.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withCORS: () => (/* binding */ withCORS)\n/* harmony export */ });\nfunction withCORS(handler) {\n    return async (req, res)=>{\n        // Set CORS headers\n        const allowedOrigin = process.env.FRONTEND_URL || \"http://localhost:3011\";\n        res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n        res.setHeader(\"Access-Control-Allow-Origin\", allowedOrigin);\n        res.setHeader(\"Access-Control-Allow-Methods\", \"GET,OPTIONS,PATCH,DELETE,POST,PUT\");\n        res.setHeader(\"Access-Control-Allow-Headers\", \"X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version, Authorization\");\n        // Handle preflight request\n        if (req.method === \"OPTIONS\") {\n            res.status(200).end();\n            return;\n        }\n        // Call the original handler\n        await handler(req, res);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWlkZGxld2FyZS9jb3JzTWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRU8sU0FBU0EsU0FBU0MsT0FBcUU7SUFDNUYsT0FBTyxPQUFPQyxLQUFxQkM7UUFDakMsbUJBQW1CO1FBQ25CLE1BQU1DLGdCQUFnQkMsUUFBUUMsR0FBRyxDQUFDQyxZQUFZLElBQUk7UUFFbERKLElBQUlLLFNBQVMsQ0FBQyxvQ0FBb0M7UUFDbERMLElBQUlLLFNBQVMsQ0FBQywrQkFBK0JKO1FBQzdDRCxJQUFJSyxTQUFTLENBQUMsZ0NBQWdDO1FBQzlDTCxJQUFJSyxTQUFTLENBQUMsZ0NBQWdDO1FBRTlDLDJCQUEyQjtRQUMzQixJQUFJTixJQUFJTyxNQUFNLEtBQUssV0FBVztZQUM1Qk4sSUFBSU8sTUFBTSxDQUFDLEtBQUtDLEdBQUc7WUFDbkI7UUFDRjtRQUVBLDRCQUE0QjtRQUM1QixNQUFNVixRQUFRQyxLQUFLQztJQUNyQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvLi9zcmMvbWlkZGxld2FyZS9jb3JzTWlkZGxld2FyZS50cz8zYjljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhDT1JTKGhhbmRsZXI6IChyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkgPT4gUHJvbWlzZTx2b2lkPikge1xuICByZXR1cm4gYXN5bmMgKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiB7XG4gICAgLy8gU2V0IENPUlMgaGVhZGVyc1xuICAgIGNvbnN0IGFsbG93ZWRPcmlnaW4gPSBwcm9jZXNzLmVudi5GUk9OVEVORF9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAxMSc7XG4gICAgXG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHMnLCAndHJ1ZScpO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsIGFsbG93ZWRPcmlnaW4pO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULE9QVElPTlMsUEFUQ0gsREVMRVRFLFBPU1QsUFVUJyk7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdYLUNTUkYtVG9rZW4sIFgtUmVxdWVzdGVkLVdpdGgsIEFjY2VwdCwgQWNjZXB0LVZlcnNpb24sIENvbnRlbnQtTGVuZ3RoLCBDb250ZW50LU1ENSwgQ29udGVudC1UeXBlLCBEYXRlLCBYLUFwaS1WZXJzaW9uLCBBdXRob3JpemF0aW9uJyk7XG5cbiAgICAvLyBIYW5kbGUgcHJlZmxpZ2h0IHJlcXVlc3RcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuZW5kKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQ2FsbCB0aGUgb3JpZ2luYWwgaGFuZGxlclxuICAgIGF3YWl0IGhhbmRsZXIocmVxLCByZXMpO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbIndpdGhDT1JTIiwiaGFuZGxlciIsInJlcSIsInJlcyIsImFsbG93ZWRPcmlnaW4iLCJwcm9jZXNzIiwiZW52IiwiRlJPTlRFTkRfVVJMIiwic2V0SGVhZGVyIiwibWV0aG9kIiwic3RhdHVzIiwiZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/middleware/corsMiddleware.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/errorHandler.ts":
/*!****************************************!*\
  !*** ./src/middleware/errorHandler.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Errors: () => (/* binding */ Errors),\n/* harmony export */   createError: () => (/* binding */ createError),\n/* harmony export */   handleApiError: () => (/* binding */ handleApiError),\n/* harmony export */   withErrorHandler: () => (/* binding */ withErrorHandler)\n/* harmony export */ });\nfunction createError(message, statusCode = 500, code) {\n    const error = new Error(message);\n    error.statusCode = statusCode;\n    error.code = code;\n    return error;\n}\nfunction handleApiError(error, req, res) {\n    console.error(\"API Error:\", {\n        error,\n        url: req.url,\n        method: req.method,\n        timestamp: new Date().toISOString()\n    });\n    if (error instanceof Error) {\n        const apiError = error;\n        if (apiError.statusCode) {\n            return res.status(apiError.statusCode).json({\n                success: false,\n                error: apiError.message,\n                code: apiError.code\n            });\n        }\n    }\n    // Default error response\n    return res.status(500).json({\n        success: false,\n        error: \"Internal server error\"\n    });\n}\nfunction withErrorHandler(handler) {\n    return async (req, res)=>{\n        try {\n            await handler(req, res);\n        } catch (error) {\n            handleApiError(error, req, res);\n        }\n    };\n}\n// Common error types\nconst Errors = {\n    NOT_FOUND: (resource)=>createError(`${resource} not found`, 404, \"NOT_FOUND\"),\n    UNAUTHORIZED: ()=>createError(\"Unauthorized\", 401, \"UNAUTHORIZED\"),\n    FORBIDDEN: ()=>createError(\"Forbidden\", 403, \"FORBIDDEN\"),\n    BAD_REQUEST: (message)=>createError(message, 400, \"BAD_REQUEST\"),\n    VALIDATION_ERROR: (message)=>createError(message, 400, \"VALIDATION_ERROR\"),\n    CONFLICT: (message)=>createError(message, 409, \"CONFLICT\"),\n    INTERNAL_ERROR: ()=>createError(\"Internal server error\", 500, \"INTERNAL_ERROR\")\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWlkZGxld2FyZS9lcnJvckhhbmRsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU9PLFNBQVNBLFlBQVlDLE9BQWUsRUFBRUMsYUFBcUIsR0FBRyxFQUFFQyxJQUFhO0lBQ2xGLE1BQU1DLFFBQVEsSUFBSUMsTUFBTUo7SUFDeEJHLE1BQU1GLFVBQVUsR0FBR0E7SUFDbkJFLE1BQU1ELElBQUksR0FBR0E7SUFDYixPQUFPQztBQUNUO0FBRU8sU0FBU0UsZUFDZEYsS0FBYyxFQUNkRyxHQUFtQixFQUNuQkMsR0FBb0I7SUFFcEJDLFFBQVFMLEtBQUssQ0FBQyxjQUFjO1FBQzFCQTtRQUNBTSxLQUFLSCxJQUFJRyxHQUFHO1FBQ1pDLFFBQVFKLElBQUlJLE1BQU07UUFDbEJDLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztJQUNuQztJQUVBLElBQUlWLGlCQUFpQkMsT0FBTztRQUMxQixNQUFNVSxXQUFXWDtRQUVqQixJQUFJVyxTQUFTYixVQUFVLEVBQUU7WUFDdkIsT0FBT00sSUFBSVEsTUFBTSxDQUFDRCxTQUFTYixVQUFVLEVBQUVlLElBQUksQ0FBQztnQkFDMUNDLFNBQVM7Z0JBQ1RkLE9BQU9XLFNBQVNkLE9BQU87Z0JBQ3ZCRSxNQUFNWSxTQUFTWixJQUFJO1lBQ3JCO1FBQ0Y7SUFDRjtJQUVBLHlCQUF5QjtJQUN6QixPQUFPSyxJQUFJUSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1FBQzFCQyxTQUFTO1FBQ1RkLE9BQU87SUFDVDtBQUNGO0FBRU8sU0FBU2UsaUJBQ2RDLE9BQXFFO0lBRXJFLE9BQU8sT0FBT2IsS0FBcUJDO1FBQ2pDLElBQUk7WUFDRixNQUFNWSxRQUFRYixLQUFLQztRQUNyQixFQUFFLE9BQU9KLE9BQU87WUFDZEUsZUFBZUYsT0FBT0csS0FBS0M7UUFDN0I7SUFDRjtBQUNGO0FBRUEscUJBQXFCO0FBQ2QsTUFBTWEsU0FBUztJQUNwQkMsV0FBVyxDQUFDQyxXQUFxQnZCLFlBQVksQ0FBQyxFQUFFdUIsU0FBUyxVQUFVLENBQUMsRUFBRSxLQUFLO0lBQzNFQyxjQUFjLElBQU14QixZQUFZLGdCQUFnQixLQUFLO0lBQ3JEeUIsV0FBVyxJQUFNekIsWUFBWSxhQUFhLEtBQUs7SUFDL0MwQixhQUFhLENBQUN6QixVQUFvQkQsWUFBWUMsU0FBUyxLQUFLO0lBQzVEMEIsa0JBQWtCLENBQUMxQixVQUFvQkQsWUFBWUMsU0FBUyxLQUFLO0lBQ2pFMkIsVUFBVSxDQUFDM0IsVUFBb0JELFlBQVlDLFNBQVMsS0FBSztJQUN6RDRCLGdCQUFnQixJQUFNN0IsWUFBWSx5QkFBeUIsS0FBSztBQUNsRSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvLi9zcmMvbWlkZGxld2FyZS9lcnJvckhhbmRsZXIudHM/N2E4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEFwaUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gIHN0YXR1c0NvZGU/OiBudW1iZXI7XHJcbiAgY29kZT86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2U6IHN0cmluZywgc3RhdHVzQ29kZTogbnVtYmVyID0gNTAwLCBjb2RlPzogc3RyaW5nKTogQXBpRXJyb3Ige1xyXG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpIGFzIEFwaUVycm9yO1xyXG4gIGVycm9yLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xyXG4gIGVycm9yLmNvZGUgPSBjb2RlO1xyXG4gIHJldHVybiBlcnJvcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUFwaUVycm9yKFxyXG4gIGVycm9yOiB1bmtub3duLFxyXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXHJcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2VcclxuKSB7XHJcbiAgY29uc29sZS5lcnJvcignQVBJIEVycm9yOicsIHtcclxuICAgIGVycm9yLFxyXG4gICAgdXJsOiByZXEudXJsLFxyXG4gICAgbWV0aG9kOiByZXEubWV0aG9kLFxyXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICB9KTtcclxuXHJcbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcclxuICAgIGNvbnN0IGFwaUVycm9yID0gZXJyb3IgYXMgQXBpRXJyb3I7XHJcbiAgICBcclxuICAgIGlmIChhcGlFcnJvci5zdGF0dXNDb2RlKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKGFwaUVycm9yLnN0YXR1c0NvZGUpLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiBhcGlFcnJvci5tZXNzYWdlLFxyXG4gICAgICAgIGNvZGU6IGFwaUVycm9yLmNvZGVcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBEZWZhdWx0IGVycm9yIHJlc3BvbnNlXHJcbiAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB3aXRoRXJyb3JIYW5kbGVyKFxyXG4gIGhhbmRsZXI6IChyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkgPT4gUHJvbWlzZTx2b2lkPlxyXG4pIHtcclxuICByZXR1cm4gYXN5bmMgKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBoYW5kbGVyKHJlcSwgcmVzKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGhhbmRsZUFwaUVycm9yKGVycm9yLCByZXEsIHJlcyk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG5cclxuLy8gQ29tbW9uIGVycm9yIHR5cGVzXHJcbmV4cG9ydCBjb25zdCBFcnJvcnMgPSB7XHJcbiAgTk9UX0ZPVU5EOiAocmVzb3VyY2U6IHN0cmluZykgPT4gY3JlYXRlRXJyb3IoYCR7cmVzb3VyY2V9IG5vdCBmb3VuZGAsIDQwNCwgJ05PVF9GT1VORCcpLFxyXG4gIFVOQVVUSE9SSVpFRDogKCkgPT4gY3JlYXRlRXJyb3IoJ1VuYXV0aG9yaXplZCcsIDQwMSwgJ1VOQVVUSE9SSVpFRCcpLFxyXG4gIEZPUkJJRERFTjogKCkgPT4gY3JlYXRlRXJyb3IoJ0ZvcmJpZGRlbicsIDQwMywgJ0ZPUkJJRERFTicpLFxyXG4gIEJBRF9SRVFVRVNUOiAobWVzc2FnZTogc3RyaW5nKSA9PiBjcmVhdGVFcnJvcihtZXNzYWdlLCA0MDAsICdCQURfUkVRVUVTVCcpLFxyXG4gIFZBTElEQVRJT05fRVJST1I6IChtZXNzYWdlOiBzdHJpbmcpID0+IGNyZWF0ZUVycm9yKG1lc3NhZ2UsIDQwMCwgJ1ZBTElEQVRJT05fRVJST1InKSxcclxuICBDT05GTElDVDogKG1lc3NhZ2U6IHN0cmluZykgPT4gY3JlYXRlRXJyb3IobWVzc2FnZSwgNDA5LCAnQ09ORkxJQ1QnKSxcclxuICBJTlRFUk5BTF9FUlJPUjogKCkgPT4gY3JlYXRlRXJyb3IoJ0ludGVybmFsIHNlcnZlciBlcnJvcicsIDUwMCwgJ0lOVEVSTkFMX0VSUk9SJylcclxufTtcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUVycm9yIiwibWVzc2FnZSIsInN0YXR1c0NvZGUiLCJjb2RlIiwiZXJyb3IiLCJFcnJvciIsImhhbmRsZUFwaUVycm9yIiwicmVxIiwicmVzIiwiY29uc29sZSIsInVybCIsIm1ldGhvZCIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImFwaUVycm9yIiwic3RhdHVzIiwianNvbiIsInN1Y2Nlc3MiLCJ3aXRoRXJyb3JIYW5kbGVyIiwiaGFuZGxlciIsIkVycm9ycyIsIk5PVF9GT1VORCIsInJlc291cmNlIiwiVU5BVVRIT1JJWkVEIiwiRk9SQklEREVOIiwiQkFEX1JFUVVFU1QiLCJWQUxJREFUSU9OX0VSUk9SIiwiQ09ORkxJQ1QiLCJJTlRFUk5BTF9FUlJPUiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/middleware/errorHandler.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/permissionMiddleware.ts":
/*!************************************************!*\
  !*** ./src/middleware/permissionMiddleware.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withPermissions: () => (/* binding */ withPermissions)\n/* harmony export */ });\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/logger */ \"(api)/./src/utils/logger.ts\");\n/* harmony import */ var _utils_roleUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/roleUtils */ \"(api)/./src/utils/roleUtils.ts\");\n\n\nfunction withPermissions(handler, requiredPermissions) {\n    return async (req, res)=>{\n        try {\n            // Get the required permissions\n            const permissions = typeof requiredPermissions === \"function\" ? requiredPermissions(req) : requiredPermissions;\n            // Get user from request (should be set by auth middleware)\n            const user = req.user;\n            if (!user) {\n                return res.status(401).json({\n                    error: \"Unauthorized\",\n                    message: \"User not authenticated\"\n                });\n            }\n            // Check permissions\n            const hasPermission = await checkPermissions(user, permissions);\n            if (!hasPermission) {\n                return res.status(403).json({\n                    error: \"Forbidden\",\n                    message: \"Permission check failed\"\n                });\n            }\n            // Call the handler\n            await handler(req, res);\n        } catch (error) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.error(\"Permission middleware error:\", error);\n            return res.status(500).json({\n                error: \"Internal server error\",\n                message: \"Permission check failed\"\n            });\n        }\n    };\n}\nasync function checkPermissions(user, requiredPermissions) {\n    // For now, implement a simple role-based permission system\n    // This can be enhanced later with a more sophisticated permission system\n    const rolePermissions = {\n        \"ADMIN\": [\n            \"users:read\",\n            \"users:create\",\n            \"users:update\",\n            \"users:delete\",\n            \"groups:read\",\n            \"groups:create\",\n            \"groups:update\",\n            \"groups:delete\",\n            \"events:read\",\n            \"events:create\",\n            \"events:update\",\n            \"events:delete\",\n            \"teams:read\",\n            \"teams:write\",\n            \"teams:create\",\n            \"teams:update\",\n            \"teams:delete\",\n            \"tasks:read\",\n            \"tasks:create\",\n            \"tasks:update\",\n            \"tasks:delete\",\n            \"tasks:enqueue\"\n        ],\n        \"EXEC_BOARD\": [\n            \"users:read\",\n            \"users:create\",\n            \"users:update\",\n            \"groups:read\",\n            \"groups:create\",\n            \"groups:update\",\n            \"events:read\",\n            \"events:create\",\n            \"events:update\",\n            \"teams:read\",\n            \"teams:write\",\n            \"teams:create\",\n            \"teams:update\",\n            \"tasks:read\",\n            \"tasks:create\",\n            \"tasks:update\"\n        ],\n        \"MEMBER\": [\n            \"users:read\",\n            \"groups:read\",\n            \"events:read\",\n            \"teams:read\",\n            \"tasks:read\"\n        ]\n    };\n    // Check if user has tech-team group in authentikGroups (OIDC groups)\n    // If they do, give them admin permissions regardless of their role\n    let effectiveRole = (0,_utils_roleUtils__WEBPACK_IMPORTED_MODULE_1__.getEffectiveSystemRole)(user.role);\n    if (user.authentikGroups && Array.isArray(user.authentikGroups)) {\n        if (user.authentikGroups.includes(\"tech-team\")) {\n            effectiveRole = \"ADMIN\";\n            _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(\"User has tech-team group, elevating to admin permissions\", {\n                userId: user.id,\n                originalRole: user.role,\n                effectiveRole,\n                authentikGroups: user.authentikGroups\n            });\n        }\n    }\n    const userPermissions = rolePermissions[effectiveRole] || [];\n    // Check if user has all required permissions\n    return requiredPermissions.every((permission)=>userPermissions.includes(permission));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWlkZGxld2FyZS9wZXJtaXNzaW9uTWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDd0M7QUFDbUI7QUFhcEQsU0FBU0UsZ0JBQ2RDLE9BQXdFLEVBQ3hFQyxtQkFBbUU7SUFFbkUsT0FBTyxPQUFPQyxLQUFxQkM7UUFDakMsSUFBSTtZQUNGLCtCQUErQjtZQUMvQixNQUFNQyxjQUFjLE9BQU9ILHdCQUF3QixhQUMvQ0Esb0JBQW9CQyxPQUNwQkQ7WUFFSiwyREFBMkQ7WUFDM0QsTUFBTUksT0FBTyxJQUFhQSxJQUFJO1lBRTlCLElBQUksQ0FBQ0EsTUFBTTtnQkFDVCxPQUFPRixJQUFJRyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO29CQUMxQkMsT0FBTztvQkFDUEMsU0FBUztnQkFDWDtZQUNGO1lBRUEsb0JBQW9CO1lBQ3BCLE1BQU1DLGdCQUFnQixNQUFNQyxpQkFBaUJOLE1BQU1EO1lBRW5ELElBQUksQ0FBQ00sZUFBZTtnQkFDbEIsT0FBT1AsSUFBSUcsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFDMUJDLE9BQU87b0JBQ1BDLFNBQVM7Z0JBQ1g7WUFDRjtZQUVBLG1CQUFtQjtZQUNuQixNQUFNVCxRQUFRRSxLQUEwQkM7UUFFMUMsRUFBRSxPQUFPSyxPQUFPO1lBQ2RYLGlEQUFNQSxDQUFDVyxLQUFLLENBQUMsZ0NBQWdDQTtZQUM3QyxPQUFPTCxJQUFJRyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUMxQkMsT0FBTztnQkFDUEMsU0FBUztZQUNYO1FBQ0Y7SUFDRjtBQUNGO0FBRUEsZUFBZUUsaUJBQWlCTixJQUFTLEVBQUVKLG1CQUE2QjtJQUN0RSwyREFBMkQ7SUFDM0QseUVBQXlFO0lBRXpFLE1BQU1XLGtCQUE0QztRQUNoRCxTQUFTO1lBQ1A7WUFBYztZQUFnQjtZQUFnQjtZQUM5QztZQUFlO1lBQWlCO1lBQWlCO1lBQ2pEO1lBQWU7WUFBaUI7WUFBaUI7WUFDakQ7WUFBYztZQUFlO1lBQWdCO1lBQWdCO1lBQzdEO1lBQWM7WUFBZ0I7WUFBZ0I7WUFBZ0I7U0FDL0Q7UUFDRCxjQUFjO1lBQ1o7WUFBYztZQUFnQjtZQUM5QjtZQUFlO1lBQWlCO1lBQ2hDO1lBQWU7WUFBaUI7WUFDaEM7WUFBYztZQUFlO1lBQWdCO1lBQzdDO1lBQWM7WUFBZ0I7U0FDL0I7UUFDRCxVQUFVO1lBQ1I7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNEO0lBQ0g7SUFFQSxxRUFBcUU7SUFDckUsbUVBQW1FO0lBQ25FLElBQUlDLGdCQUFnQmYsd0VBQXNCQSxDQUFDTyxLQUFLUyxJQUFJO0lBQ3BELElBQUlULEtBQUtVLGVBQWUsSUFBSUMsTUFBTUMsT0FBTyxDQUFDWixLQUFLVSxlQUFlLEdBQUc7UUFDL0QsSUFBSVYsS0FBS1UsZUFBZSxDQUFDRyxRQUFRLENBQUMsY0FBYztZQUM5Q0wsZ0JBQWdCO1lBQ2hCaEIsaURBQU1BLENBQUNzQixJQUFJLENBQUMsNERBQTREO2dCQUN0RUMsUUFBUWYsS0FBS2dCLEVBQUU7Z0JBQ2ZDLGNBQWNqQixLQUFLUyxJQUFJO2dCQUN2QkQ7Z0JBQ0FFLGlCQUFpQlYsS0FBS1UsZUFBZTtZQUN2QztRQUNGO0lBQ0Y7SUFFQSxNQUFNUSxrQkFBa0JYLGVBQWUsQ0FBQ0MsY0FBYyxJQUFJLEVBQUU7SUFFNUQsNkNBQTZDO0lBQzdDLE9BQU9aLG9CQUFvQnVCLEtBQUssQ0FBQ0MsQ0FBQUEsYUFBY0YsZ0JBQWdCTCxRQUFRLENBQUNPO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXJtMzYwLWJhY2tlbmQvLi9zcmMvbWlkZGxld2FyZS9wZXJtaXNzaW9uTWlkZGxld2FyZS50cz9mODE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0AvdXRpbHMvbG9nZ2VyJztcbmltcG9ydCB7IGdldEVmZmVjdGl2ZVN5c3RlbVJvbGUgfSBmcm9tICdAL3V0aWxzL3JvbGVVdGlscyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGVybWlzc2lvblJlcXVlc3QgZXh0ZW5kcyBOZXh0QXBpUmVxdWVzdCB7XG4gIHVzZXI6IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gICAgbGFzdE5hbWU6IHN0cmluZztcbiAgICByb2xlOiBzdHJpbmc7XG4gICAgZ3JvdXBzOiBzdHJpbmdbXTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhQZXJtaXNzaW9ucyhcbiAgaGFuZGxlcjogKHJlcTogUGVybWlzc2lvblJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiBQcm9taXNlPHZvaWQ+LFxuICByZXF1aXJlZFBlcm1pc3Npb25zOiBzdHJpbmdbXSB8ICgocmVxOiBOZXh0QXBpUmVxdWVzdCkgPT4gc3RyaW5nW10pXG4pIHtcbiAgcmV0dXJuIGFzeW5jIChyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBHZXQgdGhlIHJlcXVpcmVkIHBlcm1pc3Npb25zXG4gICAgICBjb25zdCBwZXJtaXNzaW9ucyA9IHR5cGVvZiByZXF1aXJlZFBlcm1pc3Npb25zID09PSAnZnVuY3Rpb24nIFxuICAgICAgICA/IHJlcXVpcmVkUGVybWlzc2lvbnMocmVxKSBcbiAgICAgICAgOiByZXF1aXJlZFBlcm1pc3Npb25zO1xuXG4gICAgICAvLyBHZXQgdXNlciBmcm9tIHJlcXVlc3QgKHNob3VsZCBiZSBzZXQgYnkgYXV0aCBtaWRkbGV3YXJlKVxuICAgICAgY29uc3QgdXNlciA9IChyZXEgYXMgYW55KS51c2VyO1xuICAgICAgXG4gICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgXG4gICAgICAgICAgZXJyb3I6ICdVbmF1dGhvcml6ZWQnLFxuICAgICAgICAgIG1lc3NhZ2U6ICdVc2VyIG5vdCBhdXRoZW50aWNhdGVkJyBcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIC8vIENoZWNrIHBlcm1pc3Npb25zXG4gICAgICBjb25zdCBoYXNQZXJtaXNzaW9uID0gYXdhaXQgY2hlY2tQZXJtaXNzaW9ucyh1c2VyLCBwZXJtaXNzaW9ucyk7XG4gICAgICBcbiAgICAgIGlmICghaGFzUGVybWlzc2lvbikge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDMpLmpzb24oeyBcbiAgICAgICAgICBlcnJvcjogJ0ZvcmJpZGRlbicsXG4gICAgICAgICAgbWVzc2FnZTogJ1Blcm1pc3Npb24gY2hlY2sgZmFpbGVkJyBcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIC8vIENhbGwgdGhlIGhhbmRsZXJcbiAgICAgIGF3YWl0IGhhbmRsZXIocmVxIGFzIFBlcm1pc3Npb25SZXF1ZXN0LCByZXMpO1xuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGxvZ2dlci5lcnJvcignUGVybWlzc2lvbiBtaWRkbGV3YXJlIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxuICAgICAgICBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcicsXG4gICAgICAgIG1lc3NhZ2U6ICdQZXJtaXNzaW9uIGNoZWNrIGZhaWxlZCcgXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNoZWNrUGVybWlzc2lvbnModXNlcjogYW55LCByZXF1aXJlZFBlcm1pc3Npb25zOiBzdHJpbmdbXSk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAvLyBGb3Igbm93LCBpbXBsZW1lbnQgYSBzaW1wbGUgcm9sZS1iYXNlZCBwZXJtaXNzaW9uIHN5c3RlbVxuICAvLyBUaGlzIGNhbiBiZSBlbmhhbmNlZCBsYXRlciB3aXRoIGEgbW9yZSBzb3BoaXN0aWNhdGVkIHBlcm1pc3Npb24gc3lzdGVtXG4gIFxuICBjb25zdCByb2xlUGVybWlzc2lvbnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZ1tdPiA9IHtcbiAgICAnQURNSU4nOiBbXG4gICAgICAndXNlcnM6cmVhZCcsICd1c2VyczpjcmVhdGUnLCAndXNlcnM6dXBkYXRlJywgJ3VzZXJzOmRlbGV0ZScsXG4gICAgICAnZ3JvdXBzOnJlYWQnLCAnZ3JvdXBzOmNyZWF0ZScsICdncm91cHM6dXBkYXRlJywgJ2dyb3VwczpkZWxldGUnLFxuICAgICAgJ2V2ZW50czpyZWFkJywgJ2V2ZW50czpjcmVhdGUnLCAnZXZlbnRzOnVwZGF0ZScsICdldmVudHM6ZGVsZXRlJyxcbiAgICAgICd0ZWFtczpyZWFkJywgJ3RlYW1zOndyaXRlJywgJ3RlYW1zOmNyZWF0ZScsICd0ZWFtczp1cGRhdGUnLCAndGVhbXM6ZGVsZXRlJyxcbiAgICAgICd0YXNrczpyZWFkJywgJ3Rhc2tzOmNyZWF0ZScsICd0YXNrczp1cGRhdGUnLCAndGFza3M6ZGVsZXRlJywgJ3Rhc2tzOmVucXVldWUnXG4gICAgXSxcbiAgICAnRVhFQ19CT0FSRCc6IFtcbiAgICAgICd1c2VyczpyZWFkJywgJ3VzZXJzOmNyZWF0ZScsICd1c2Vyczp1cGRhdGUnLFxuICAgICAgJ2dyb3VwczpyZWFkJywgJ2dyb3VwczpjcmVhdGUnLCAnZ3JvdXBzOnVwZGF0ZScsXG4gICAgICAnZXZlbnRzOnJlYWQnLCAnZXZlbnRzOmNyZWF0ZScsICdldmVudHM6dXBkYXRlJyxcbiAgICAgICd0ZWFtczpyZWFkJywgJ3RlYW1zOndyaXRlJywgJ3RlYW1zOmNyZWF0ZScsICd0ZWFtczp1cGRhdGUnLFxuICAgICAgJ3Rhc2tzOnJlYWQnLCAndGFza3M6Y3JlYXRlJywgJ3Rhc2tzOnVwZGF0ZSdcbiAgICBdLFxuICAgICdNRU1CRVInOiBbXG4gICAgICAndXNlcnM6cmVhZCcsXG4gICAgICAnZ3JvdXBzOnJlYWQnLFxuICAgICAgJ2V2ZW50czpyZWFkJyxcbiAgICAgICd0ZWFtczpyZWFkJyxcbiAgICAgICd0YXNrczpyZWFkJ1xuICAgIF1cbiAgfTtcblxuICAvLyBDaGVjayBpZiB1c2VyIGhhcyB0ZWNoLXRlYW0gZ3JvdXAgaW4gYXV0aGVudGlrR3JvdXBzIChPSURDIGdyb3VwcylcbiAgLy8gSWYgdGhleSBkbywgZ2l2ZSB0aGVtIGFkbWluIHBlcm1pc3Npb25zIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgcm9sZVxuICBsZXQgZWZmZWN0aXZlUm9sZSA9IGdldEVmZmVjdGl2ZVN5c3RlbVJvbGUodXNlci5yb2xlKTtcbiAgaWYgKHVzZXIuYXV0aGVudGlrR3JvdXBzICYmIEFycmF5LmlzQXJyYXkodXNlci5hdXRoZW50aWtHcm91cHMpKSB7XG4gICAgaWYgKHVzZXIuYXV0aGVudGlrR3JvdXBzLmluY2x1ZGVzKCd0ZWNoLXRlYW0nKSkge1xuICAgICAgZWZmZWN0aXZlUm9sZSA9ICdBRE1JTic7XG4gICAgICBsb2dnZXIuaW5mbygnVXNlciBoYXMgdGVjaC10ZWFtIGdyb3VwLCBlbGV2YXRpbmcgdG8gYWRtaW4gcGVybWlzc2lvbnMnLCB7XG4gICAgICAgIHVzZXJJZDogdXNlci5pZCxcbiAgICAgICAgb3JpZ2luYWxSb2xlOiB1c2VyLnJvbGUsXG4gICAgICAgIGVmZmVjdGl2ZVJvbGUsXG4gICAgICAgIGF1dGhlbnRpa0dyb3VwczogdXNlci5hdXRoZW50aWtHcm91cHNcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHVzZXJQZXJtaXNzaW9ucyA9IHJvbGVQZXJtaXNzaW9uc1tlZmZlY3RpdmVSb2xlXSB8fCBbXTtcbiAgXG4gIC8vIENoZWNrIGlmIHVzZXIgaGFzIGFsbCByZXF1aXJlZCBwZXJtaXNzaW9uc1xuICByZXR1cm4gcmVxdWlyZWRQZXJtaXNzaW9ucy5ldmVyeShwZXJtaXNzaW9uID0+IHVzZXJQZXJtaXNzaW9ucy5pbmNsdWRlcyhwZXJtaXNzaW9uKSk7XG59XG4iXSwibmFtZXMiOlsibG9nZ2VyIiwiZ2V0RWZmZWN0aXZlU3lzdGVtUm9sZSIsIndpdGhQZXJtaXNzaW9ucyIsImhhbmRsZXIiLCJyZXF1aXJlZFBlcm1pc3Npb25zIiwicmVxIiwicmVzIiwicGVybWlzc2lvbnMiLCJ1c2VyIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsImhhc1Blcm1pc3Npb24iLCJjaGVja1Blcm1pc3Npb25zIiwicm9sZVBlcm1pc3Npb25zIiwiZWZmZWN0aXZlUm9sZSIsInJvbGUiLCJhdXRoZW50aWtHcm91cHMiLCJBcnJheSIsImlzQXJyYXkiLCJpbmNsdWRlcyIsImluZm8iLCJ1c2VySWQiLCJpZCIsIm9yaWdpbmFsUm9sZSIsInVzZXJQZXJtaXNzaW9ucyIsImV2ZXJ5IiwicGVybWlzc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/middleware/permissionMiddleware.ts\n");

/***/ }),

/***/ "(api)/./src/models/prismaClient.ts":
/*!************************************!*\
  !*** ./src/models/prismaClient.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = globalThis.__prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0\n});\nif (true) {\n    globalThis.__prisma = prisma;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbW9kZWxzL3ByaXNtYUNsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBTXZDLE1BQU1DLFNBQVNDLFdBQVdDLFFBQVEsSUFBSSxJQUFJSCx3REFBWUEsQ0FBQztJQUM1REksS0FBS0MsS0FBeUIsR0FBZ0I7UUFBQztRQUFTO1FBQVM7S0FBTyxHQUFHLENBQVM7QUFDdEYsR0FBRztBQUVILElBQUlBLElBQXlCLEVBQWM7SUFDekNILFdBQVdDLFFBQVEsR0FBR0Y7QUFDeEI7QUFFQSxpRUFBZUEsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21ybTM2MC1iYWNrZW5kLy4vc3JjL21vZGVscy9wcmlzbWFDbGllbnQudHM/N2M1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgdmFyIF9fcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxUaGlzLl9fcHJpc21hIHx8IG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gIGxvZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBbJ3F1ZXJ5JywgJ2Vycm9yJywgJ3dhcm4nXSA6IFsnZXJyb3InXSxcclxufSk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gIGdsb2JhbFRoaXMuX19wcmlzbWEgPSBwcmlzbWE7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHByaXNtYTtcclxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImdsb2JhbFRoaXMiLCJfX3ByaXNtYSIsImxvZyIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/models/prismaClient.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/teams/index.ts":
/*!**************************************!*\
  !*** ./src/pages/api/teams/index.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../models/prismaClient */ \"(api)/./src/models/prismaClient.ts\");\n/* harmony import */ var _managers_backgroundTaskManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../managers/backgroundTaskManager */ \"(api)/./src/managers/backgroundTaskManager.ts\");\n/* harmony import */ var _middleware_corsMiddleware__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../middleware/corsMiddleware */ \"(api)/./src/middleware/corsMiddleware.ts\");\n/* harmony import */ var _middleware_authMiddleware__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../middleware/authMiddleware */ \"(api)/./src/middleware/authMiddleware.ts\");\n/* harmony import */ var _middleware_permissionMiddleware__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../middleware/permissionMiddleware */ \"(api)/./src/middleware/permissionMiddleware.ts\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../utils/logger */ \"(api)/./src/utils/logger.ts\");\n/* harmony import */ var _tasks_queue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../tasks/queue */ \"(api)/./src/tasks/queue.ts\");\n/* harmony import */ var _middleware_errorHandler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../middleware/errorHandler */ \"(api)/./src/middleware/errorHandler.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__]);\nzod__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n// Validation schemas\nconst createTeamSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Team name is required\"),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    type: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"COMPETITION\",\n        \"DEVELOPMENT\"\n    ]),\n    subtype: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"BLUE\",\n        \"RED\",\n        \"CTF\"\n    ]).optional(),\n    parentTeamId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    members: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        userId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        role: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n            \"MEMBER\",\n            \"LEADER\"\n        ]).default(\"MEMBER\")\n    })).default([]),\n    // Optional provisioning configuration\n    provisioningOptions: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        wikijs: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        nextcloudFolder: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        nextcloudCalendar: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        nextcloudDeck: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        github: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        discord: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional()\n});\nconst updateTeamSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Team name is required\").optional(),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    type: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"COMPETITION\",\n        \"DEVELOPMENT\"\n    ]).optional(),\n    subtype: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"BLUE\",\n        \"RED\",\n        \"CTF\"\n    ]).optional(),\n    parentTeamId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    memberIds: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional()\n});\nconst listTeamsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    page: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>parseInt(val || \"1\")),\n    limit: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().transform((val)=>parseInt(val || \"20\")),\n    search: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    type: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"COMPETITION\",\n        \"DEVELOPMENT\"\n    ]).optional(),\n    groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n});\n/**\n * @swagger\n * /api/teams:\n *   get:\n *     summary: List teams with filtering and pagination\n *     tags: [Teams]\n *     security:\n *       - sessionAuth: []\n *     parameters:\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *           default: 1\n *         description: Page number for pagination\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *           default: 20\n *         description: Number of teams per page\n *       - in: query\n *         name: search\n *         schema:\n *           type: string\n *         description: Search term for team name\n *       - in: query\n *         name: type\n *         schema:\n *           type: string\n *           enum: [COMPETITION, DEVELOPMENT]\n *         description: Filter by team type\n *       - in: query\n *         name: groupId\n *         schema:\n *           type: string\n *         description: Filter by group ID\n *     responses:\n *       200:\n *         description: List of teams\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 data:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/Team'\n *                 pagination:\n *                   type: object\n *                   properties:\n *                     page:\n *                       type: integer\n *                     limit:\n *                       type: integer\n *                     total:\n *                       type: integer\n *                     totalPages:\n *                       type: integer\n *       401:\n *         description: Unauthorized\n *       403:\n *         description: Forbidden - insufficient permissions\n *       500:\n *         description: Internal server error\n *   post:\n *     summary: Create a new team\n *     tags: [Teams]\n *     security:\n *       - sessionAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - name\n *               - type\n *             properties:\n *               name:\n *                 type: string\n *                 description: Team name\n *               description:\n *                 type: string\n *                 description: Team description\n *               type:\n *                 type: string\n *                 enum: [COMPETITION, DEVELOPMENT]\n *                 description: Team type\n *               subtype:\n *                 type: string\n *                 enum: [BLUE, RED, CTF]\n *                 description: Team subtype\n *               parentTeamId:\n *                 type: string\n *                 description: Parent team ID for subteams\n *               groupId:\n *                 type: string\n *                 description: Associated group ID\n *               memberIds:\n *                 type: array\n *                 items:\n *                   type: string\n *                 description: Array of user IDs to add as team members\n *     responses:\n *       201:\n *         description: Team created successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Team'\n *       400:\n *         description: Bad request - validation error\n *       401:\n *         description: Unauthorized\n *       403:\n *         description: Forbidden - insufficient permissions\n *       409:\n *         description: Conflict - team name already exists\n *       500:\n *         description: Internal server error\n */ async function handler(req, res) {\n    try {\n        if (req.method === \"GET\") {\n            // List teams\n            const queryParams = listTeamsSchema.parse(req.query);\n            const { page = 1, limit = 20, search, type, groupId } = queryParams;\n            const skip = (page - 1) * limit;\n            // Build where clause\n            const where = {};\n            if (search) {\n                where.name = {\n                    contains: search,\n                    mode: \"insensitive\"\n                };\n            }\n            if (type) {\n                where.type = type;\n            }\n            if (groupId) {\n                where.groupId = groupId;\n            }\n            // Get total count\n            const total = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma.team.count({\n                where\n            });\n            // Get teams with pagination\n            const teams = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma.team.findMany({\n                where,\n                skip,\n                take: limit,\n                orderBy: {\n                    name: \"asc\"\n                },\n                include: {\n                    group: true,\n                    parentTeam: true,\n                    subteams: true,\n                    userTeams: {\n                        include: {\n                            user: {\n                                select: {\n                                    id: true,\n                                    email: true,\n                                    firstName: true,\n                                    lastName: true,\n                                    displayName: true,\n                                    role: true\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            const totalPages = Math.ceil(total / limit);\n            res.status(200).json({\n                data: teams,\n                pagination: {\n                    page,\n                    limit,\n                    total,\n                    totalPages\n                }\n            });\n        } else if (req.method === \"POST\") {\n            // Create team\n            const data = createTeamSchema.parse(req.body);\n            // Check if team name already exists\n            const existingTeam = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma.team.findFirst({\n                where: {\n                    name: data.name\n                }\n            });\n            if (existingTeam) {\n                return res.status(409).json({\n                    error: \"Team with this name already exists\"\n                });\n            }\n            // Create team in database\n            const team = await _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma.team.create({\n                data: {\n                    name: data.name,\n                    description: data.description,\n                    type: data.type,\n                    subtype: data.subtype,\n                    parentTeamId: data.parentTeamId,\n                    groupId: data.groupId\n                },\n                include: {\n                    group: true,\n                    parentTeam: true,\n                    subteams: true\n                }\n            });\n            // Add team members if specified\n            if (data.members && data.members.length > 0) {\n                const userTeams = data.members.map((member)=>({\n                        userId: member.userId,\n                        teamId: team.id,\n                        role: member.role\n                    }));\n                await _models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma.userTeam.createMany({\n                    data: userTeams\n                });\n            }\n            // Prepare task data\n            const taskData = {\n                teamId: team.id,\n                action: \"create\",\n                data: {\n                    name: data.name,\n                    description: data.description,\n                    type: data.type,\n                    subtype: data.subtype,\n                    parentTeamId: data.parentTeamId,\n                    groupId: data.groupId,\n                    members: data.members,\n                    provisioningOptions: data.provisioningOptions\n                },\n                userId: req.user?.id || \"system\",\n                options: {\n                    authentik: true,\n                    nextcloudGroup: true,\n                    wikijs: data.provisioningOptions?.wikijs || false,\n                    nextcloudFolder: data.provisioningOptions?.nextcloudFolder || false,\n                    nextcloudCalendar: data.provisioningOptions?.nextcloudCalendar || false,\n                    nextcloudDeck: data.provisioningOptions?.nextcloudDeck || false,\n                    github: data.provisioningOptions?.github || false,\n                    discord: data.provisioningOptions?.discord || false\n                }\n            };\n            try {\n                // Create background task now so it appears immediately in UI\n                const backgroundTaskManager = new _managers_backgroundTaskManager__WEBPACK_IMPORTED_MODULE_2__.BackgroundTaskManager(_models_prismaClient__WEBPACK_IMPORTED_MODULE_1__.prisma);\n                const backgroundTask = await backgroundTaskManager.createTask({\n                    name: `Team create`,\n                    description: `Provisioning for team ${team.id}`,\n                    entityType: \"TEAM\",\n                    entityId: team.id,\n                    subtaskNames: [\n                        \"Authentik\",\n                        \"Wiki.js\",\n                        \"Nextcloud\",\n                        \"GitHub\",\n                        \"Discord\"\n                    ]\n                });\n                await (0,_tasks_queue__WEBPACK_IMPORTED_MODULE_7__.addJobToQueue)(\"TEAM_PROVISIONING\", {\n                    ...taskData,\n                    backgroundTaskId: backgroundTask.id\n                });\n                _utils_logger__WEBPACK_IMPORTED_MODULE_6__.logger.info(`Queued team provisioning task for team: ${team.id}`);\n            } catch (error) {\n                _utils_logger__WEBPACK_IMPORTED_MODULE_6__.logger.error(\"Failed to queue team provisioning task:\", error);\n            // Don't fail the request if provisioning fails\n            }\n            res.status(201).json(team);\n        } else {\n            res.status(405).json({\n                error: \"Method not allowed\"\n            });\n        }\n    } catch (error) {\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_0__.z.ZodError) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_6__.logger.warn(\"Validation error in teams API\", {\n                errors: error.errors\n            });\n            return res.status(400).json({\n                error: \"Validation error\",\n                details: error.errors\n            });\n        }\n        // Handle custom API errors (like CONFLICT, NOT_FOUND, etc.)\n        if (error instanceof Error && error.statusCode) {\n            return (0,_middleware_errorHandler__WEBPACK_IMPORTED_MODULE_8__.handleApiError)(error, req, res);\n        }\n        _utils_logger__WEBPACK_IMPORTED_MODULE_6__.logger.error(\"Error in teams API\", {\n            error,\n            method: req.method\n        });\n        res.status(500).json({\n            error: \"Internal server error\"\n        });\n    }\n}\n// Apply middleware: CORS, authentication then permissions\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_middleware_corsMiddleware__WEBPACK_IMPORTED_MODULE_3__.withCORS)((0,_middleware_authMiddleware__WEBPACK_IMPORTED_MODULE_4__.withAuth)((0,_middleware_permissionMiddleware__WEBPACK_IMPORTED_MODULE_5__.withPermissions)(handler, [\n    \"teams:read\",\n    \"teams:write\"\n]))));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/teams/index.ts\n");

/***/ }),

/***/ "(api)/./src/tasks/queue.ts":
/*!****************************!*\
  !*** ./src/tasks/queue.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QUEUE_NAMES: () => (/* binding */ QUEUE_NAMES),\n/* harmony export */   addJobToQueue: () => (/* binding */ addJobToQueue),\n/* harmony export */   authentikQueue: () => (/* binding */ authentikQueue),\n/* harmony export */   closeQueues: () => (/* binding */ closeQueues),\n/* harmony export */   discordQueue: () => (/* binding */ discordQueue),\n/* harmony export */   emailQueue: () => (/* binding */ emailQueue),\n/* harmony export */   getQueueHealth: () => (/* binding */ getQueueHealth),\n/* harmony export */   listmonkQueue: () => (/* binding */ listmonkQueue),\n/* harmony export */   provisionQueue: () => (/* binding */ provisionQueue),\n/* harmony export */   qrCodeQueue: () => (/* binding */ qrCodeQueue),\n/* harmony export */   syncGroupsQueue: () => (/* binding */ syncGroupsQueue),\n/* harmony export */   teamProvisioningQueue: () => (/* binding */ teamProvisioningQueue)\n/* harmony export */ });\n/* harmony import */ var bullmq__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bullmq */ \"bullmq\");\n/* harmony import */ var bullmq__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bullmq__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ioredis */ \"ioredis\");\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ioredis__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/logger */ \"(api)/./src/utils/logger.ts\");\n\n\n\n// Redis connection with BullMQ-compatible options\nconst redis = new (ioredis__WEBPACK_IMPORTED_MODULE_1___default())(process.env.REDIS_URL || \"redis://localhost:6379\", {\n    maxRetriesPerRequest: null\n});\n// Queue names\nconst QUEUE_NAMES = {\n    EMAIL: \"email\",\n    QR_CODE: \"qr-code\",\n    SYNC_GROUPS: \"sync-groups\",\n    PROVISION: \"provision\",\n    TEAM_PROVISIONING: \"team-provisioning\",\n    DISCORD: \"discord\",\n    LISTMONK: \"listmonk\",\n    AUTHENTIK: \"authentik\"\n};\n// Create queues\nconst emailQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.EMAIL, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 3,\n        backoff: {\n            type: \"exponential\",\n            delay: 2000\n        }\n    }\n});\nconst qrCodeQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.QR_CODE, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 2,\n        backoff: {\n            type: \"exponential\",\n            delay: 1000\n        }\n    }\n});\nconst syncGroupsQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.SYNC_GROUPS, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 5,\n        backoff: {\n            type: \"exponential\",\n            delay: 5000\n        }\n    }\n});\nconst provisionQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.PROVISION, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 1\n    }\n});\nconst teamProvisioningQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.TEAM_PROVISIONING, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 3,\n        backoff: {\n            type: \"exponential\",\n            delay: 5000\n        }\n    }\n});\nconst discordQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.DISCORD, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 3,\n        backoff: {\n            type: \"exponential\",\n            delay: 2000\n        }\n    }\n});\nconst listmonkQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.LISTMONK, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 3,\n        backoff: {\n            type: \"exponential\",\n            delay: 3000\n        }\n    }\n});\nconst authentikQueue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(QUEUE_NAMES.AUTHENTIK, {\n    connection: redis,\n    defaultJobOptions: {\n        attempts: 3,\n        backoff: {\n            type: \"exponential\",\n            delay: 2000\n        }\n    }\n});\n// Note: Not using QueueScheduler due to BullMQ version constraints\n// Note: BullMQ event handlers may need to be configured differently\n// For now, we'll log queue status through other means\n_utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"All queues created and configured\");\n// Helper function to add jobs to queues\nasync function addJobToQueue(queueName, data, options) {\n    const queue = getQueueByName(queueName);\n    if (!queue) {\n        throw new Error(`Unknown queue: ${queueName}`);\n    }\n    const job = await queue.add(queueName, data, {\n        delay: options?.delay,\n        priority: options?.priority,\n        attempts: options?.attempts\n    });\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.info(`Added job ${job.id} to ${queueName} queue`);\n    return job;\n}\nfunction getQueueByName(queueName) {\n    switch(queueName){\n        case \"EMAIL\":\n            return emailQueue;\n        case \"QR_CODE\":\n            return qrCodeQueue;\n        case \"SYNC_GROUPS\":\n            return syncGroupsQueue;\n        case \"PROVISION\":\n            return provisionQueue;\n        case \"TEAM_PROVISIONING\":\n            return teamProvisioningQueue;\n        case \"DISCORD\":\n            return discordQueue;\n        case \"LISTMONK\":\n            return listmonkQueue;\n        default:\n            return null;\n    }\n}\n// Graceful shutdown\nasync function closeQueues() {\n    await emailQueue.close();\n    await qrCodeQueue.close();\n    await syncGroupsQueue.close();\n    await provisionQueue.close();\n    await teamProvisioningQueue.close();\n    await discordQueue.close();\n    await listmonkQueue.close();\n    await redis.quit();\n    _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"All queues closed\");\n}\n// Health check\nasync function getQueueHealth() {\n    try {\n        await redis.ping();\n        return {\n            redis: \"healthy\",\n            queues: {\n                email: await emailQueue.getJobCounts(),\n                qrCode: await qrCodeQueue.getJobCounts(),\n                syncGroups: await syncGroupsQueue.getJobCounts(),\n                provision: await provisionQueue.getJobCounts(),\n                teamProvisioning: await teamProvisioningQueue.getJobCounts(),\n                discord: await discordQueue.getJobCounts(),\n                listmonk: await listmonkQueue.getJobCounts()\n            }\n        };\n    } catch (error) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_2__.logger.error(\"Queue health check failed:\", error);\n        return {\n            redis: \"unhealthy\",\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/tasks/queue.ts\n");

/***/ }),

/***/ "(api)/./src/utils/logger.ts":
/*!*****************************!*\
  !*** ./src/utils/logger.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\nvar LogLevel;\n(function(LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 1] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 3] = \"ERROR\";\n})(LogLevel || (LogLevel = {}));\nclass Logger {\n    constructor(level = 1){\n        this.level = level;\n    }\n    formatMessage(level, message, meta) {\n        const timestamp = new Date().toISOString();\n        const metaStr = meta ? ` ${JSON.stringify(meta)}` : \"\";\n        return `[${timestamp}] ${level}: ${message}${metaStr}`;\n    }\n    log(level, levelName, message, meta) {\n        if (level >= this.level) {\n            const formattedMessage = this.formatMessage(levelName, message, meta);\n            switch(level){\n                case 3:\n                    console.error(formattedMessage);\n                    break;\n                case 2:\n                    console.warn(formattedMessage);\n                    break;\n                case 1:\n                    console.info(formattedMessage);\n                    break;\n                case 0:\n                    console.debug(formattedMessage);\n                    break;\n            }\n        }\n    }\n    debug(message, meta) {\n        this.log(0, \"DEBUG\", message, meta);\n    }\n    info(message, meta) {\n        this.log(1, \"INFO\", message, meta);\n    }\n    warn(message, meta) {\n        this.log(2, \"WARN\", message, meta);\n    }\n    error(message, meta) {\n        this.log(3, \"ERROR\", message, meta);\n    }\n    setLevel(level) {\n        this.level = level;\n    }\n}\nconst logger = new Logger( true ? 0 : 0);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logger);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvbG9nZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7VUFBWUE7Ozs7O0dBQUFBLGFBQUFBO0FBT1osTUFBTUM7SUFHSkMsWUFBWUMsU0FBK0IsQ0FBRTtRQUMzQyxJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDZjtJQUVRQyxjQUFjRCxLQUFhLEVBQUVFLE9BQWUsRUFBRUMsSUFBVSxFQUFVO1FBQ3hFLE1BQU1DLFlBQVksSUFBSUMsT0FBT0MsV0FBVztRQUN4QyxNQUFNQyxVQUFVSixPQUFPLENBQUMsQ0FBQyxFQUFFSyxLQUFLQyxTQUFTLENBQUNOLE1BQU0sQ0FBQyxHQUFHO1FBQ3BELE9BQU8sQ0FBQyxDQUFDLEVBQUVDLFVBQVUsRUFBRSxFQUFFSixNQUFNLEVBQUUsRUFBRUUsUUFBUSxFQUFFSyxRQUFRLENBQUM7SUFDeEQ7SUFFUUcsSUFBSVYsS0FBZSxFQUFFVyxTQUFpQixFQUFFVCxPQUFlLEVBQUVDLElBQVUsRUFBRTtRQUMzRSxJQUFJSCxTQUFTLElBQUksQ0FBQ0EsS0FBSyxFQUFFO1lBQ3ZCLE1BQU1ZLG1CQUFtQixJQUFJLENBQUNYLGFBQWEsQ0FBQ1UsV0FBV1QsU0FBU0M7WUFFaEUsT0FBUUg7Z0JBQ047b0JBQ0VhLFFBQVFDLEtBQUssQ0FBQ0Y7b0JBQ2Q7Z0JBQ0Y7b0JBQ0VDLFFBQVFFLElBQUksQ0FBQ0g7b0JBQ2I7Z0JBQ0Y7b0JBQ0VDLFFBQVFHLElBQUksQ0FBQ0o7b0JBQ2I7Z0JBQ0Y7b0JBQ0VDLFFBQVFJLEtBQUssQ0FBQ0w7b0JBQ2Q7WUFDSjtRQUNGO0lBQ0Y7SUFFQUssTUFBTWYsT0FBZSxFQUFFQyxJQUFVLEVBQUU7UUFDakMsSUFBSSxDQUFDTyxHQUFHLElBQWlCLFNBQVNSLFNBQVNDO0lBQzdDO0lBRUFhLEtBQUtkLE9BQWUsRUFBRUMsSUFBVSxFQUFFO1FBQ2hDLElBQUksQ0FBQ08sR0FBRyxJQUFnQixRQUFRUixTQUFTQztJQUMzQztJQUVBWSxLQUFLYixPQUFlLEVBQUVDLElBQVUsRUFBRTtRQUNoQyxJQUFJLENBQUNPLEdBQUcsSUFBZ0IsUUFBUVIsU0FBU0M7SUFDM0M7SUFFQVcsTUFBTVosT0FBZSxFQUFFQyxJQUFVLEVBQUU7UUFDakMsSUFBSSxDQUFDTyxHQUFHLElBQWlCLFNBQVNSLFNBQVNDO0lBQzdDO0lBRUFlLFNBQVNsQixLQUFlLEVBQUU7UUFDeEIsSUFBSSxDQUFDQSxLQUFLLEdBQUdBO0lBQ2Y7QUFDRjtBQUVPLE1BQU1tQixTQUFTLElBQUlyQixPQUN4QnNCLEtBQXlCLFVBQ3pCO0FBRUYsaUVBQWVELE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tcm0zNjAtYmFja2VuZC8uL3NyYy91dGlscy9sb2dnZXIudHM/N2NmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBMb2dMZXZlbCB7XHJcbiAgREVCVUcgPSAwLFxyXG4gIElORk8gPSAxLFxyXG4gIFdBUk4gPSAyLFxyXG4gIEVSUk9SID0gM1xyXG59XHJcblxyXG5jbGFzcyBMb2dnZXIge1xyXG4gIHByaXZhdGUgbGV2ZWw6IExvZ0xldmVsO1xyXG5cclxuICBjb25zdHJ1Y3RvcihsZXZlbDogTG9nTGV2ZWwgPSBMb2dMZXZlbC5JTkZPKSB7XHJcbiAgICB0aGlzLmxldmVsID0gbGV2ZWw7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGZvcm1hdE1lc3NhZ2UobGV2ZWw6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KTogc3RyaW5nIHtcclxuICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcclxuICAgIGNvbnN0IG1ldGFTdHIgPSBtZXRhID8gYCAke0pTT04uc3RyaW5naWZ5KG1ldGEpfWAgOiAnJztcclxuICAgIHJldHVybiBgWyR7dGltZXN0YW1wfV0gJHtsZXZlbH06ICR7bWVzc2FnZX0ke21ldGFTdHJ9YDtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgbG9nKGxldmVsOiBMb2dMZXZlbCwgbGV2ZWxOYW1lOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZywgbWV0YT86IGFueSkge1xyXG4gICAgaWYgKGxldmVsID49IHRoaXMubGV2ZWwpIHtcclxuICAgICAgY29uc3QgZm9ybWF0dGVkTWVzc2FnZSA9IHRoaXMuZm9ybWF0TWVzc2FnZShsZXZlbE5hbWUsIG1lc3NhZ2UsIG1ldGEpO1xyXG4gICAgICBcclxuICAgICAgc3dpdGNoIChsZXZlbCkge1xyXG4gICAgICAgIGNhc2UgTG9nTGV2ZWwuRVJST1I6XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGZvcm1hdHRlZE1lc3NhZ2UpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5XQVJOOlxyXG4gICAgICAgICAgY29uc29sZS53YXJuKGZvcm1hdHRlZE1lc3NhZ2UpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5JTkZPOlxyXG4gICAgICAgICAgY29uc29sZS5pbmZvKGZvcm1hdHRlZE1lc3NhZ2UpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBMb2dMZXZlbC5ERUJVRzpcclxuICAgICAgICAgIGNvbnNvbGUuZGVidWcoZm9ybWF0dGVkTWVzc2FnZSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVidWcobWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KSB7XHJcbiAgICB0aGlzLmxvZyhMb2dMZXZlbC5ERUJVRywgJ0RFQlVHJywgbWVzc2FnZSwgbWV0YSk7XHJcbiAgfVxyXG5cclxuICBpbmZvKG1lc3NhZ2U6IHN0cmluZywgbWV0YT86IGFueSkge1xyXG4gICAgdGhpcy5sb2coTG9nTGV2ZWwuSU5GTywgJ0lORk8nLCBtZXNzYWdlLCBtZXRhKTtcclxuICB9XHJcblxyXG4gIHdhcm4obWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KSB7XHJcbiAgICB0aGlzLmxvZyhMb2dMZXZlbC5XQVJOLCAnV0FSTicsIG1lc3NhZ2UsIG1ldGEpO1xyXG4gIH1cclxuXHJcbiAgZXJyb3IobWVzc2FnZTogc3RyaW5nLCBtZXRhPzogYW55KSB7XHJcbiAgICB0aGlzLmxvZyhMb2dMZXZlbC5FUlJPUiwgJ0VSUk9SJywgbWVzc2FnZSwgbWV0YSk7XHJcbiAgfVxyXG5cclxuICBzZXRMZXZlbChsZXZlbDogTG9nTGV2ZWwpIHtcclxuICAgIHRoaXMubGV2ZWwgPSBsZXZlbDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKFxyXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gTG9nTGV2ZWwuREVCVUcgOiBMb2dMZXZlbC5JTkZPXHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBsb2dnZXI7XHJcbiJdLCJuYW1lcyI6WyJMb2dMZXZlbCIsIkxvZ2dlciIsImNvbnN0cnVjdG9yIiwibGV2ZWwiLCJmb3JtYXRNZXNzYWdlIiwibWVzc2FnZSIsIm1ldGEiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJtZXRhU3RyIiwiSlNPTiIsInN0cmluZ2lmeSIsImxvZyIsImxldmVsTmFtZSIsImZvcm1hdHRlZE1lc3NhZ2UiLCJjb25zb2xlIiwiZXJyb3IiLCJ3YXJuIiwiaW5mbyIsImRlYnVnIiwic2V0TGV2ZWwiLCJsb2dnZXIiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/utils/logger.ts\n");

/***/ }),

/***/ "(api)/./src/utils/roleUtils.ts":
/*!********************************!*\
  !*** ./src/utils/roleUtils.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLASS_RANK_ROLES: () => (/* binding */ CLASS_RANK_ROLES),\n/* harmony export */   SYSTEM_ROLES: () => (/* binding */ SYSTEM_ROLES),\n/* harmony export */   getDefaultSystemRole: () => (/* binding */ getDefaultSystemRole),\n/* harmony export */   getEffectiveSystemRole: () => (/* binding */ getEffectiveSystemRole),\n/* harmony export */   isClassRankRole: () => (/* binding */ isClassRankRole),\n/* harmony export */   isSystemRole: () => (/* binding */ isSystemRole),\n/* harmony export */   validateClassRankRole: () => (/* binding */ validateClassRankRole),\n/* harmony export */   validateSystemRole: () => (/* binding */ validateSystemRole)\n/* harmony export */ });\n/**\n * Utility functions for handling user roles and class ranks\n */ // System roles that control permissions and access\nconst SYSTEM_ROLES = [\n    \"ADMIN\",\n    \"EXEC_BOARD\",\n    \"MEMBER\"\n];\n// Class rank roles that are used for Discord role assignment\nconst CLASS_RANK_ROLES = [\n    \"FIRST_YEAR\",\n    \"SECOND_YEAR\",\n    \"THIRD_YEAR\",\n    \"FOURTH_YEAR\",\n    \"ALUMNI_OTHER\"\n];\n/**\n * Check if a role is a system role (ADMIN, EXEC_BOARD, MEMBER)\n */ function isSystemRole(role) {\n    return SYSTEM_ROLES.includes(role);\n}\n/**\n * Check if a role is a class rank role (FIRST_YEAR, SECOND_YEAR, etc.)\n */ function isClassRankRole(role) {\n    return CLASS_RANK_ROLES.includes(role);\n}\n/**\n * Get the default system role for new users\n */ function getDefaultSystemRole() {\n    return \"MEMBER\";\n}\n/**\n * Validate that a role is a valid system role\n * Throws an error if the role is a class rank role\n */ function validateSystemRole(role) {\n    if (isClassRankRole(role)) {\n        throw new Error(`Invalid system role: ${role} is a class rank role, not a system role`);\n    }\n    if (!isSystemRole(role)) {\n        throw new Error(`Invalid system role: ${role}`);\n    }\n    return role;\n}\n/**\n * Validate that a class rank is a valid class rank role\n * Throws an error if the role is a system role\n */ function validateClassRankRole(role) {\n    if (isSystemRole(role)) {\n        throw new Error(`Invalid class rank: ${role} is a system role, not a class rank role`);\n    }\n    if (!isClassRankRole(role)) {\n        throw new Error(`Invalid class rank: ${role}`);\n    }\n    return role;\n}\n/**\n * Get a user's effective system role, ensuring it's not a class rank role\n * If the user has a class rank role, default to MEMBER\n */ function getEffectiveSystemRole(userRole) {\n    if (isSystemRole(userRole)) {\n        return userRole;\n    }\n    // If the user has a class rank role, they should have MEMBER as their system role\n    if (isClassRankRole(userRole)) {\n        return \"MEMBER\";\n    }\n    // Default fallback\n    return \"MEMBER\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvcm9sZVV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRUE7O0NBRUMsR0FFRCxtREFBbUQ7QUFDNUMsTUFBTUEsZUFBZTtJQUFDO0lBQVM7SUFBYztDQUFTLENBQVU7QUFHdkUsNkRBQTZEO0FBQ3RELE1BQU1DLG1CQUFtQjtJQUFDO0lBQWM7SUFBZTtJQUFjO0lBQWU7Q0FBZSxDQUFVO0FBR3BIOztDQUVDLEdBQ00sU0FBU0MsYUFBYUMsSUFBWTtJQUN2QyxPQUFPSCxhQUFhSSxRQUFRLENBQUNEO0FBQy9CO0FBRUE7O0NBRUMsR0FDTSxTQUFTRSxnQkFBZ0JGLElBQVk7SUFDMUMsT0FBT0YsaUJBQWlCRyxRQUFRLENBQUNEO0FBQ25DO0FBRUE7O0NBRUMsR0FDTSxTQUFTRztJQUNkLE9BQU87QUFDVDtBQUVBOzs7Q0FHQyxHQUNNLFNBQVNDLG1CQUFtQkosSUFBWTtJQUM3QyxJQUFJRSxnQkFBZ0JGLE9BQU87UUFDekIsTUFBTSxJQUFJSyxNQUFNLENBQUMscUJBQXFCLEVBQUVMLEtBQUssd0NBQXdDLENBQUM7SUFDeEY7SUFFQSxJQUFJLENBQUNELGFBQWFDLE9BQU87UUFDdkIsTUFBTSxJQUFJSyxNQUFNLENBQUMscUJBQXFCLEVBQUVMLEtBQUssQ0FBQztJQUNoRDtJQUVBLE9BQU9BO0FBQ1Q7QUFFQTs7O0NBR0MsR0FDTSxTQUFTTSxzQkFBc0JOLElBQVk7SUFDaEQsSUFBSUQsYUFBYUMsT0FBTztRQUN0QixNQUFNLElBQUlLLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRUwsS0FBSyx3Q0FBd0MsQ0FBQztJQUN2RjtJQUVBLElBQUksQ0FBQ0UsZ0JBQWdCRixPQUFPO1FBQzFCLE1BQU0sSUFBSUssTUFBTSxDQUFDLG9CQUFvQixFQUFFTCxLQUFLLENBQUM7SUFDL0M7SUFFQSxPQUFPQTtBQUNUO0FBRUE7OztDQUdDLEdBQ00sU0FBU08sdUJBQXVCQyxRQUFnQjtJQUNyRCxJQUFJVCxhQUFhUyxXQUFXO1FBQzFCLE9BQU9BO0lBQ1Q7SUFFQSxrRkFBa0Y7SUFDbEYsSUFBSU4sZ0JBQWdCTSxXQUFXO1FBQzdCLE9BQU87SUFDVDtJQUVBLG1CQUFtQjtJQUNuQixPQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tcm0zNjAtYmFja2VuZC8uL3NyYy91dGlscy9yb2xlVXRpbHMudHM/ZDVmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb2xlIH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xuXG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciBoYW5kbGluZyB1c2VyIHJvbGVzIGFuZCBjbGFzcyByYW5rc1xuICovXG5cbi8vIFN5c3RlbSByb2xlcyB0aGF0IGNvbnRyb2wgcGVybWlzc2lvbnMgYW5kIGFjY2Vzc1xuZXhwb3J0IGNvbnN0IFNZU1RFTV9ST0xFUyA9IFsnQURNSU4nLCAnRVhFQ19CT0FSRCcsICdNRU1CRVInXSBhcyBjb25zdDtcbmV4cG9ydCB0eXBlIFN5c3RlbVJvbGUgPSB0eXBlb2YgU1lTVEVNX1JPTEVTW251bWJlcl07XG5cbi8vIENsYXNzIHJhbmsgcm9sZXMgdGhhdCBhcmUgdXNlZCBmb3IgRGlzY29yZCByb2xlIGFzc2lnbm1lbnRcbmV4cG9ydCBjb25zdCBDTEFTU19SQU5LX1JPTEVTID0gWydGSVJTVF9ZRUFSJywgJ1NFQ09ORF9ZRUFSJywgJ1RISVJEX1lFQVInLCAnRk9VUlRIX1lFQVInLCAnQUxVTU5JX09USEVSJ10gYXMgY29uc3Q7XG5leHBvcnQgdHlwZSBDbGFzc1JhbmtSb2xlID0gdHlwZW9mIENMQVNTX1JBTktfUk9MRVNbbnVtYmVyXTtcblxuLyoqXG4gKiBDaGVjayBpZiBhIHJvbGUgaXMgYSBzeXN0ZW0gcm9sZSAoQURNSU4sIEVYRUNfQk9BUkQsIE1FTUJFUilcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3lzdGVtUm9sZShyb2xlOiBzdHJpbmcpOiByb2xlIGlzIFN5c3RlbVJvbGUge1xuICByZXR1cm4gU1lTVEVNX1JPTEVTLmluY2x1ZGVzKHJvbGUgYXMgU3lzdGVtUm9sZSk7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSByb2xlIGlzIGEgY2xhc3MgcmFuayByb2xlIChGSVJTVF9ZRUFSLCBTRUNPTkRfWUVBUiwgZXRjLilcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ2xhc3NSYW5rUm9sZShyb2xlOiBzdHJpbmcpOiByb2xlIGlzIENsYXNzUmFua1JvbGUge1xuICByZXR1cm4gQ0xBU1NfUkFOS19ST0xFUy5pbmNsdWRlcyhyb2xlIGFzIENsYXNzUmFua1JvbGUpO1xufVxuXG4vKipcbiAqIEdldCB0aGUgZGVmYXVsdCBzeXN0ZW0gcm9sZSBmb3IgbmV3IHVzZXJzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0U3lzdGVtUm9sZSgpOiBTeXN0ZW1Sb2xlIHtcbiAgcmV0dXJuICdNRU1CRVInO1xufVxuXG4vKipcbiAqIFZhbGlkYXRlIHRoYXQgYSByb2xlIGlzIGEgdmFsaWQgc3lzdGVtIHJvbGVcbiAqIFRocm93cyBhbiBlcnJvciBpZiB0aGUgcm9sZSBpcyBhIGNsYXNzIHJhbmsgcm9sZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVTeXN0ZW1Sb2xlKHJvbGU6IHN0cmluZyk6IFN5c3RlbVJvbGUge1xuICBpZiAoaXNDbGFzc1JhbmtSb2xlKHJvbGUpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHN5c3RlbSByb2xlOiAke3JvbGV9IGlzIGEgY2xhc3MgcmFuayByb2xlLCBub3QgYSBzeXN0ZW0gcm9sZWApO1xuICB9XG4gIFxuICBpZiAoIWlzU3lzdGVtUm9sZShyb2xlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBzeXN0ZW0gcm9sZTogJHtyb2xlfWApO1xuICB9XG4gIFxuICByZXR1cm4gcm9sZTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSB0aGF0IGEgY2xhc3MgcmFuayBpcyBhIHZhbGlkIGNsYXNzIHJhbmsgcm9sZVxuICogVGhyb3dzIGFuIGVycm9yIGlmIHRoZSByb2xlIGlzIGEgc3lzdGVtIHJvbGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQ2xhc3NSYW5rUm9sZShyb2xlOiBzdHJpbmcpOiBDbGFzc1JhbmtSb2xlIHtcbiAgaWYgKGlzU3lzdGVtUm9sZShyb2xlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjbGFzcyByYW5rOiAke3JvbGV9IGlzIGEgc3lzdGVtIHJvbGUsIG5vdCBhIGNsYXNzIHJhbmsgcm9sZWApO1xuICB9XG4gIFxuICBpZiAoIWlzQ2xhc3NSYW5rUm9sZShyb2xlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjbGFzcyByYW5rOiAke3JvbGV9YCk7XG4gIH1cbiAgXG4gIHJldHVybiByb2xlO1xufVxuXG4vKipcbiAqIEdldCBhIHVzZXIncyBlZmZlY3RpdmUgc3lzdGVtIHJvbGUsIGVuc3VyaW5nIGl0J3Mgbm90IGEgY2xhc3MgcmFuayByb2xlXG4gKiBJZiB0aGUgdXNlciBoYXMgYSBjbGFzcyByYW5rIHJvbGUsIGRlZmF1bHQgdG8gTUVNQkVSXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFZmZlY3RpdmVTeXN0ZW1Sb2xlKHVzZXJSb2xlOiBzdHJpbmcpOiBTeXN0ZW1Sb2xlIHtcbiAgaWYgKGlzU3lzdGVtUm9sZSh1c2VyUm9sZSkpIHtcbiAgICByZXR1cm4gdXNlclJvbGU7XG4gIH1cbiAgXG4gIC8vIElmIHRoZSB1c2VyIGhhcyBhIGNsYXNzIHJhbmsgcm9sZSwgdGhleSBzaG91bGQgaGF2ZSBNRU1CRVIgYXMgdGhlaXIgc3lzdGVtIHJvbGVcbiAgaWYgKGlzQ2xhc3NSYW5rUm9sZSh1c2VyUm9sZSkpIHtcbiAgICByZXR1cm4gJ01FTUJFUic7XG4gIH1cbiAgXG4gIC8vIERlZmF1bHQgZmFsbGJhY2tcbiAgcmV0dXJuICdNRU1CRVInO1xufVxuIl0sIm5hbWVzIjpbIlNZU1RFTV9ST0xFUyIsIkNMQVNTX1JBTktfUk9MRVMiLCJpc1N5c3RlbVJvbGUiLCJyb2xlIiwiaW5jbHVkZXMiLCJpc0NsYXNzUmFua1JvbGUiLCJnZXREZWZhdWx0U3lzdGVtUm9sZSIsInZhbGlkYXRlU3lzdGVtUm9sZSIsIkVycm9yIiwidmFsaWRhdGVDbGFzc1JhbmtSb2xlIiwiZ2V0RWZmZWN0aXZlU3lzdGVtUm9sZSIsInVzZXJSb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/utils/roleUtils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fteams&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fteams%2Findex.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();